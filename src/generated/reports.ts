/**
 * RentalWorks  Reports API v1
 * v1
 * DO NOT MODIFY - This file has been generated using oazapfts.
 * See https://www.npmjs.com/package/oazapfts
 */
import { Oazapfts, QS } from "../../deps.ts";
export const defaults: Oazapfts.Defaults<Oazapfts.CustomHeaders> = {
    headers: {},
    baseUrl: "/",
};
const oazapfts = Oazapfts.runtime(defaults);
export const servers = {};
export type FwStandardReportingFwReportEmailInfo = {
    "from"?: string | null;
    to?: string | null;
    cc?: string | null;
    subject?: string | null;
    body?: string | null;
};
export type FwStandardReportingFwReportRenderRequestEmailImageOptions = {
    Width?: number;
    Height?: number;
};
export type FwStandardReportingFwReportRenderRequest = {
    /** Valid values: Html, Pdf, Email, EmailImage */
    renderMode?: string | null;
    parameters?: {
        [key: string]: any | null;
    } | null;
    email?: FwStandardReportingFwReportEmailInfo;
    downloadPdfAsAttachment?: boolean;
    emailImageOptions?: FwStandardReportingFwReportRenderRequestEmailImageOptions;
};
export type FwStandardReportingFwReportRenderResponse = {
    renderMode?: string | null;
    htmlReportUrl?: string | null;
    pdfReportUrl?: string | null;
    consoleOutput?: string | null;
    draftDownloadUrl?: string | null;
};
export type FwCoreApiSwashbuckleBadRequestResponse = {
    [key: string]: string[];
};
export type FwStandardModelsFwApiException = {
    StatusCode?: number;
    Message?: string;
    StackTrace?: string;
};
export type FwStandardModelsCheckBoxListItem = {
    value?: string | null;
    text?: string | null;
    selected?: boolean | null;
};
export type WebApiModulesReportsOrderReportsActiveOrdersWithUncontractedItemsReportActiveOrdersWithUncontractedItemsReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    OfficeLocationId?: string | null;
    UserId?: string | null;
    OrderTypeId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult = {
    downloadUrl?: string | null;
};
export type FwStandardSqlServerFwJsonDataTableColumn = {
    Name?: string | null;
    DataField?: string | null;
    DataType?: FwStandardSqlServerFwDataTypes;
    IsUniqueId?: boolean;
    IsVisible?: boolean;
};
export type FwStandardDataFwTranslatedValue = {
    FieldName?: string | null;
    TranslatedValue?: string | null;
    UntranslatedValue?: string | null;
    IsTranslated?: boolean;
    UserIsTranslating?: boolean;
};
export type FwStandardSqlServerFwJsonDataTable = {
    ColumnIndex?: {
        [key: string]: number | null;
    } | null;
    Totals?: {
        [key: string]: number | null;
    } | null;
    Columns?: FwStandardSqlServerFwJsonDataTableColumn[] | null;
    Rows?: any[][] | null;
    PageNo?: number;
    PageSize?: number;
    TotalPages?: number;
    TotalRows?: number;
    DateFields?: string[] | null;
    ServerVersion?: string | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
};
export type FwStandardSqlServerFwJsonDataTableRead = {
    ColumnIndex?: {
        [key: string]: number | null;
    } | null;
    Totals?: {
        [key: string]: number | null;
    } | null;
    Columns?: FwStandardSqlServerFwJsonDataTableColumn[] | null;
    Rows?: any[][] | null;
    PageNo?: number;
    PageSize?: number;
    TotalPages?: number;
    TotalRows?: number;
    DateFields?: string[] | null;
    ColumnNameByIndex?: {
        [key: string]: string | null;
    } | null;
    ServerVersion?: string | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
};
export type FwStandardDataFwCustomValue = {
    FieldName?: string | null;
    FieldValue?: string | null;
    FieldType?: string | null;
    ValidationModule?: string | null;
    ValidationFieldName?: string | null;
};
export type FwStandardDataFwDefaultAttribute = {
    FieldName?: string | null;
    AttributeName?: string | null;
    DefaultValue?: string | null;
};
export type FwStandardBusinessLogicFwBusinessLogic = {
    AuditNote?: string | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Original?: FwStandardBusinessLogicFwBusinessLogic;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type FwStandardBusinessLogicFwBusinessLogicFieldDefinition = {
    Name?: string | null;
    DataType?: FwStandardSqlServerFwDataTypes;
    ExcelOptions?: FwStandardSqlServerAttributesFwExcelOptions;
    MaxLength?: number;
    IsRequired?: boolean;
    IsPrimaryKey?: boolean;
    IsReadOnly?: boolean;
    DisplayFieldName?: string | null;
    AllowedValues?: string | null;
    TemplateSequence?: number;
};
export type FwStandardBusinessLogicFwBusinessLogicRead = {
    AuditNote?: string | null;
    RecordTitle?: string | null;
    _Fields?: FwStandardBusinessLogicFwBusinessLogicFieldDefinition[] | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Original?: FwStandardBusinessLogicFwBusinessLogicRead;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type FwStandardDataFwReportLoader = {
    PrintDate?: string | null;
    PrintTime?: string | null;
    PrintDateTime?: string | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _Original?: FwStandardBusinessLogicFwBusinessLogic;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type FwStandardDataFwReportLoaderRead = {
    PrintDate?: string | null;
    PrintTime?: string | null;
    PrintDateTime?: string | null;
    DateFields?: string[] | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _Original?: FwStandardBusinessLogicFwBusinessLogicRead;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type FwStandardModulesAdministratorCustomReportCssCustomReportCssLoader = {
    CustomReportCssId?: number | null;
    Description?: string | null;
    Css?: string | null;
    IsGlobal?: boolean | null;
    Inactive?: boolean | null;
    Active?: boolean | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _Original?: FwStandardBusinessLogicFwBusinessLogic;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type FwStandardModulesAdministratorCustomReportCssCustomReportCssLoaderRead = {
    CustomReportCssId?: number | null;
    Description?: string | null;
    Css?: string | null;
    IsGlobal?: boolean | null;
    Inactive?: boolean | null;
    Active?: boolean | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _Original?: FwStandardBusinessLogicFwBusinessLogicRead;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type WebApiDataAppReportResponse = {
    DataTable?: FwStandardSqlServerFwJsonDataTable;
    DataObject?: FwStandardDataFwReportLoader;
    PrintDate?: string | null;
    PrintTime?: string | null;
    PrintDateTime?: string | null;
    CustomReportTemplate?: string | null;
    GlobalCssRules?: FwStandardModulesAdministratorCustomReportCssCustomReportCssLoader[] | null;
    GlobalStyle?: string | null;
    EmailTemplate?: string | null;
};
export type WebApiDataAppReportResponseRead = {
    DataTable?: FwStandardSqlServerFwJsonDataTableRead;
    DataObject?: FwStandardDataFwReportLoaderRead;
    PrintDate?: string | null;
    PrintTime?: string | null;
    PrintDateTime?: string | null;
    CustomReportTemplate?: string | null;
    GlobalCssRules?: FwStandardModulesAdministratorCustomReportCssCustomReportCssLoaderRead[] | null;
    GlobalStyle?: string | null;
    EmailTemplate?: string | null;
};
export type FwStandardModelsBrowseRequest = {
    miscfields?: any | null;
    "module"?: string | null;
    options?: any | null;
    orderby?: string | null;
    orderbydirection?: string | null;
    top?: number;
    pageno?: number;
    pagesize?: number;
    searchfieldoperators?: string[] | null;
    searchfields?: string[] | null;
    searchfieldvalues?: string[] | null;
    searchfieldtypes?: string[] | null;
    searchseparators?: string[] | null;
    searchcondition?: string[] | null;
    searchconjunctions?: string[] | null;
    searchgroupings?: number[] | null;
    uniqueids?: any | null;
    boundids?: any | null;
    filterfields?: {
        [key: string]: string | null;
    } | null;
    activeview?: string | null;
    emptyobject?: boolean;
    forexcel?: boolean;
    includeallcolumns?: boolean;
    fields?: FwStandardModelsCheckBoxListItem[] | null;
    totalfields?: string[] | null;
    activeviewfields?: {
        [key: string]: string[] | null;
    } | null;
};
export type WebApiModulesReportsBillingAgentBillingReportAgentBillingReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    IncludeNoCharge?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    AgentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsAccountingReportsArAgingReportArAgingReportRequest = {
    AsOfDate?: string;
    OfficeLocationId?: string | null;
    CustomerId?: string | null;
    DealCsrId?: string | null;
    DealTypeId?: string | null;
    DealId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsAccountingReportsArAgingSummaryReportArAgingSummaryReportRequest = {
    AsOfDate?: string;
    OfficeLocationId?: string | null;
    CustomerId?: string | null;
    DealCsrId?: string | null;
    DealTypeId?: string | null;
    DealId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type FwStandardModelsSelectedCheckBoxListItem = {
    value?: string | null;
};
export type WebApiModulesReportsBillingBillingAnalysisReportBillingAnalysisReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    OfficeLocationId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    ProjectId?: string | null;
    AgentId?: string | null;
    Status?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    IncludeFilter?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    IncludeTaxFilter?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    ExcludeOrdersBilledInTotal?: boolean | null;
    ExcludeZeroOrderTotal?: boolean | null;
    IncludeProjectStatus?: boolean | null;
    IncludeCreditsInvoiced?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingBillingProgressReportBillingProgressReportRequest = {
    AsOfDate?: string;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    IncludeCredits?: boolean | null;
    ExcludeBilled100?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    DealCsrId?: string | null;
    CustomerId?: string | null;
    DealTypeId?: string | null;
    DealId?: string | null;
    AgentId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingBillingScheduleReportBillingScheduleReportRequest = {
    OrderId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingBillingStatementReportBillingStatementReportRequest = {
    FromDate?: string;
    ToDate?: string;
    IncludeNoCharge?: boolean | null;
    IncludePaidInvoices?: boolean | null;
    IncludeZeroBalance?: boolean | null;
    PaymentsThroughToday?: boolean | null;
    HidePaymentDetails?: boolean | null;
    OfficeLocationId?: string | null;
    DealStatusId?: string | null;
    DealTypeId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPropsWardrobeReportsBrochureAnalysisReportBrochureAnalysisReportRequest = {
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    WarehouseId?: string | null;
    OriginalShowId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsChangeAuditReportsChangeAuditReportChangeAuditReportRequest = {
    FromDate?: string;
    ToDate?: string;
    HoursOffsetFromUTC?: number | null;
    ModuleName?: string | null;
    WebUsersId?: string | null;
    Keyword?: string | null;
    AuditType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsConsignedInventoryOrderHistoryReportConsignedInventoryOrderHistoryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    ConsignorId?: string | null;
    ConsignorAgreementId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsConsignedInventoryReportConsignedInventoryReportRequest = {
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    ConsignorId?: string | null;
    ConsignorAgreementId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsConsignorInventoryStatusAndLocationReportConsignorInventoryStatusAndLocationReportRequest = {
    WarehouseId?: string | null;
    ConsignorId?: string | null;
    ConsignorAgreementId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsConsignmentReportsConsignorItemsReportConsignorItemsReportRequest = {
    ConsignorId?: string | null;
    ConsignorAgreementId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsConsignorSettlementReportConsignorSettlementReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    ConsignorId?: string | null;
    ConsignorAgreementId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsConsignorStatementReportConsignorStatementReportRequest = {
    FromDate?: string;
    ToDate?: string;
    IncludeUnpaidFees?: boolean | null;
    OfficeLocationId?: string | null;
    ConsignorId?: string | null;
    ConsignorAgreementId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsWarehouseReportsContainerPackingListContainerPackingListRequest = {
    ContainerItemId?: string | null;
    AppLanguageId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsContractRevisionReportContractRevisionReportRequest = {
    FromDate?: string;
    ToDate?: string;
    FilterDates?: boolean | null;
    DaysChanged?: number | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    UserId?: string | null;
    DealId?: string | null;
    RevisionTypes?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingCreateInvoiceProcessReportCreateInvoiceProcessReportRequest = {
    InvoiceCreationBatchId?: string | null;
    ExceptionsOnly?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsDealReportsCreditsOnAccountReportCreditsOnAccountReportRequest = {
    OfficeLocationId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    OnlyRemaining?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsCrewReportsCrewSignInReportCrewSignInReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    OrderId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsDealReportsCustomerRevenueByMonthReportCustomerRevenueByMonthReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerTypeId?: string | null;
    CustomerId?: string | null;
    DealTypeId?: string | null;
    DealId?: string | null;
    InventoryTypeId?: string | null;
    RevenueTypes?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsDealReportsCustomerRevenueByTypeReportCustomerRevenueByTypeReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealTypeId?: string | null;
    DealId?: string | null;
    OrderTypeId?: string | null;
    CurrencyId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsAccountingReportsDailyReceiptsReportDailyReceiptsReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    PaymentTypeId?: string | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsChargeProcessingReportsDealInvoiceBatchReportDealInvoiceBatchReportRequest = {
    BatchId?: string | null;
    FromBatchNumber?: string | null;
    ToBatchNumber?: string | null;
    BatchFromDate?: string | null;
    BatchToDate?: string | null;
    BatchRange?: string | null;
    LocationId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsDealReportsDealInvoiceDetailReportDealInvoiceDetailReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    IncludeNoCharge?: boolean | null;
    DeductVendorItemCost?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    NoCharge?: string | null;
    BilledHiatus?: string | null;
    BillableFlat?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsDealReportsDealOutstandingItemsReportDealOutstandingItemsReportRequest = {
    FromDate?: string | null;
    ToDate?: string | null;
    DateType?: string | null;
    IncludeValueCost?: string | null;
    ItemsToInclude?: string | null;
    FilterDates?: boolean | null;
    IncludeFullImages?: boolean | null;
    IncludeThumbnailImages?: boolean | null;
    ExcludePendingExchanges?: boolean | null;
    IncludeContainersOnly?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    OrderUnitId?: string | null;
    OrderTypeId?: string | null;
    OrderId?: string | null;
    ContractId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsAccountingReportsDepreciationGlDetailReportDepreciationGlDetailReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsExchangeContractReportExchangeContractReportRequest = {
    ContractId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsFixedAssetBookValueFixedAssetBookValueRequest = {
    AsOfDate?: string;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    ExcludeFullyDepreciated?: boolean | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsFixedAssetDepreciationReportFixedAssetDepreciationReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsAccountingReportsGlDistributionReportGlDistributionReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    GlDistributionType?: string | null;
    GlAccountId?: string | null;
    ExcludeGlAccountId?: string | null;
    DealId?: string | null;
    IsSomeDetail?: boolean | null;
    IsFullDetail?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsWarehouseReportsInactiveEligibleReportInactiveEligibleReportRequest = {
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    Ranks?: string | null;
    IncludeFilter?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsIncomeGlDetailReportIncomeGlDetailReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsIncomingDeliveryInstructionsIncomingDeliveryInstructionsRequest = {
    InDeliveryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsIncomingShippingLabelIncomingShippingLabelRequest = {
    OrderId?: string | null;
    ShippingCaseId?: string | null;
    WeightInCase?: string | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsInContractReportInContractReportRequest = {
    ShowSwappedItems?: boolean | null;
    ExchangeContractId?: string | null;
    ContractId?: string | null;
    AppLanguageId?: string | null;
    ContractType?: string | null;
    IncludeSubVendor?: boolean | null;
    ShowImages?: boolean | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPropsWardrobeReportsInventoryByLocationReportInventoryByLocationReportRequest = {
    ReportType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    AsOfDate?: string | null;
    ShowMissingAisleShelfOnly?: boolean;
    FromAisleShelf?: string | null;
    ToAisleShelf?: string | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    DepartmentId?: string | null;
    WarehouseId?: string | null;
    OriginalShowId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    InventoryStatusId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPropsWardrobeReportsInventoryReceiptDetailsReportInventoryReceiptDetailsReportRequest = {
    ReportType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    FromDate?: string | null;
    ToDate?: string | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    DepartmentId?: string | null;
    WarehouseId?: string | null;
    OriginalShowId?: string | null;
    VendorId?: string | null;
    InventoryReceiptId?: string | null;
    BuyerId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    ShowImages?: boolean;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPropsWardrobeReportsInventoryReceiptSummaryReportInventoryReceiptSummaryReportRequest = {
    ReportType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    FromDate?: string | null;
    ToDate?: string | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    DepartmentId?: string | null;
    WarehouseId?: string | null;
    OriginalShowId?: string | null;
    VendorId?: string | null;
    BuyerId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsInventoryStatusByOrderReportInventoryStatusByOrderReportRequest = {
    OrderType?: string | null;
    View?: string | null;
    SearchDatesBy?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    FromDate?: string | null;
    ToDate?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Activities?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    InventoryTypeId?: string | null;
    InventoryId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsInventoryStatusByPurchaseOrderReportInventoryStatusByPurchaseOrderReportRequest = {
    OrderType?: string | null;
    SearchDatesBy?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    FromDate?: string | null;
    ToDate?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Activities?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    VendorId?: string | null;
    POTypeId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingInvoiceDiscountReportInvoiceDiscountReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    DiscountPercent?: number | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    DiscountReasonId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingInvoiceReportInvoiceReportRequest = {
    InvoiceId?: string | null;
    RollUpPeriods?: boolean | null;
    PrintZeroExtended?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingInvoiceSummaryReportInvoiceSummaryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    IncludeNoCharge?: boolean | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPropsWardrobeReportsItemsPurchasedByDealReportItemsPurchasedByDealReportRequest = {
    ReportType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    TrackedBy?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    CostRangeFrom?: number | null;
    CostRangeTo?: number | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    DepartmentId?: string | null;
    WarehouseId?: string | null;
    OriginalShowId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    InventoryStatusId?: string | null;
    ShowImages?: boolean;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsLateReturnsReportLateReturnsReportRequest = {
    ReportType?: string | null;
    Days?: number | null;
    DueBackDate?: string;
    OfficeLocationId?: string | null;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    InventoryTypeId?: string | null;
    OrderedByContactId?: string | null;
    OrderId?: string | null;
    AgentId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsLostContractReportLostContractReportRequest = {
    ContractId?: string | null;
    AppLanguageId?: string | null;
    ContractType?: string | null;
    IncludeSubVendor?: boolean | null;
    ShowImages?: boolean | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderChangeReportOrderChangeReportRequest = {
    OrderType?: string | null;
    OrderId?: string | null;
    QuoteId?: string | null;
    FromDate?: string | null;
    FromTime?: string | null;
    ToDate?: string | null;
    ToTime?: string | null;
    FilterBy?: string | null;
    HoursOffsetFromUTC?: number | null;
    ExcludeZeroVariance?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsOrderConflictReportOrderConflictReportRequest = {
    FromDate?: string;
    ToDate?: string;
    AvailableFor?: string | null;
    ConflictType?: string | null;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    DealId?: string | null;
    OrderId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    Classifications?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    RefreshIfNeeded?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsOrderDatesAndBannersReportOrderDatesAndBannersReportRequest = {
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    OfficeLocationId?: string | null;
    UserId?: string | null;
    OrderTypeId?: string | null;
    OrderStatus?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    OutgoingDeliveryType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    IncomingDeliveryType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    PrintAlertBannerMessage?: boolean;
    FromDate?: string | null;
    ToDate?: string | null;
    FilterDates?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsOrderReportOrderReportRequest = {
    OrderId?: string | null;
    Id?: string | null;
    ReportView?: WebApiModulesReportsOrderReportsOrderReportReportViewType;
    PrintEntireGroup?: boolean | null;
    PrintInventoryType?: boolean | null;
    PrintCategory?: boolean | null;
    PrintTotalReplacementCost?: boolean | null;
    PrintInventoryTypeSubTotal?: boolean | null;
    PrintCategorySubTotal?: boolean | null;
    PrintZeroExtended?: boolean | null;
    PrintLineItemNotes?: boolean | null;
    PrintSplitLines?: boolean | null;
    PrintGrandTotal?: boolean | null;
    PrintGrossTotal?: boolean | null;
    PrintGrandDiscount?: boolean | null;
    PrintGrandWeekly?: boolean | null;
    PrintGrandMonthly?: boolean | null;
    PrintGrandPeriod?: boolean | null;
    PrintGrandHiatus?: boolean | null;
    PrintActivityWeekly?: boolean | null;
    PrintActivityMonthly?: boolean | null;
    PrintActivityPeriod?: boolean | null;
    LanguageId?: string | null;
    FilterRentalAndSaleItems?: boolean | null;
    RentalAndSaleItemsToInclude?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsDealReportsOrdersByDealReportOrdersByDealReportRequest = {
    FilterDatesOrderCreate?: boolean | null;
    OrderCreateFromDate?: string | null;
    OrderCreateToDate?: string | null;
    FilterDatesOrderStart?: boolean | null;
    OrderStartFromDate?: string | null;
    OrderStartToDate?: string | null;
    FilterDatesDealCredit?: boolean | null;
    DealCreditFromDate?: string | null;
    DealCreditToDate?: string | null;
    FilterDatesDealInsurance?: boolean | null;
    DealInsuranceFromDate?: string | null;
    DealInsuranceToDate?: string | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealTypeId?: string | null;
    DealStatusId?: string | null;
    DealId?: string | null;
    NoCharge?: string | null;
    OrderType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    QuoteStatus?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    OrderStatus?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsOrderStatusDetailReportOrderStatusDetailReportRequest = {
    OrderId?: string | null;
    View?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsOrderStatusSummaryReportOrderStatusSummaryReportRequest = {
    OrderId?: string | null;
    View?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderValueSheetReportOrderValueSheetReportRequest = {
    OrderId?: string | null;
    QuoteId?: string | null;
    ProjectId?: string | null;
    RentalValue?: string | null;
    WeightInCase?: boolean | null;
    ExcludeZeroValueItems?: boolean | null;
    FilterBy?: string | null;
    GroupByShippingCase?: boolean | null;
    OutContractId?: string | null;
    OrderType?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsOutContractReportOutContractReportRequest = {
    ContractId?: string | null;
    AppLanguageId?: string | null;
    ContractType?: string | null;
    IncludeSubVendor?: boolean | null;
    ShowImages?: boolean | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOutgoingDeliveryInstructionsOutgoingDeliveryInstructionsRequest = {
    OutDeliveryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsOutgoingShippingLabelOutgoingShippingLabelRequest = {
    OrderId?: string | null;
    ShippingCaseId?: string | null;
    WeightInCase?: string | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsOutstandingPurchaseReportOutstandingPurchaseReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    PoTypeId?: string | null;
    VendorId?: string | null;
    Ranks?: string | null;
    OustandingOnly?: boolean | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsOutstandingSubRentalReportOutstandingSubRentalReportRequest = {
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealTypeId?: string | null;
    DealId?: string | null;
    VendorId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    OnlyIncludeICodesWithQuantityAvail?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest = {
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    AttributeId?: string | null;
    FixedAsset?: WebApiIncludeExcludeAll;
    Ranks?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest = {
    Classifications?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Ranks?: string | null;
    FixedAsset?: WebApiIncludeExcludeAll;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    WarehouseCatalogId?: string | null;
    IncludeZeroQuantity?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsInventoryChangeReportInventoryChangeReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    ChangeType?: string | null;
    FixedAsset?: WebApiIncludeExcludeAll;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest = {
    PurchasedFromDate?: string | null;
    PurchasedToDate?: string | null;
    ReceivedFromDate?: string | null;
    ReceivedToDate?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Ranks?: string | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    OriginalShowId?: string | null;
    VendorId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPartsInventoryReportsPartsInventoryReorderReportPartsInventoryReorderReportRequest = {
    ReorderPointMode?: string | null;
    IncludeZeroReorderPoint?: boolean | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest = {
    FromDate?: string;
    ToDate?: string;
    TransactionTypes?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryCountSheetReportPhysicalInventoryCountSheetReportRequest = {
    PhysicalInventoryId?: string | null;
    WarehouseId?: string | null;
    SpaceIds?: string | null;
    InventoryDepartmentIds?: string | null;
    CategoryIds?: string | null;
    MasterIds?: string | null;
    IsSpace?: boolean;
    isRecount?: boolean;
    IncludeCompleteKits?: boolean;
    IncludeCompleteKitReferences?: boolean;
    ExcludeOptionalAccessories?: boolean;
    TrackedBys?: FwStandardModelsCheckBoxListItem[] | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryDiscrepancyReportPhysicalInventoryDiscrepancyReportRequest = {
    PhysicalInventoryId?: string | null;
    ConsignorIds?: string | null;
    CategoryIds?: string | null;
    MasterIds?: string | null;
    IncludeIcodesThatAreNotDiscrepancies?: boolean;
    PrintBarcodeSerialNotCounted?: boolean;
    IsSpace?: boolean;
    InventoryDepartmentIds?: string | null;
    SpaceIds?: string | null;
    TrackedBys?: FwStandardModelsCheckBoxListItem[] | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryExceptionReportPhysicalInventoryExceptionReportRequest = {
    PhysicalInventoryId?: string | null;
    CategoryIds?: string | null;
    InventoryDepartmentIds?: string | null;
    SpaceIds?: string | null;
    MasterIds?: string | null;
    IncludeZeroOwned?: boolean;
    TrackedBys?: FwStandardModelsCheckBoxListItem[] | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryPrescanProgressReportPhysicalInventoryPrescanProgressReportRequest = {
    PhysicalInventoryId?: string | null;
    WarehouseId?: string | null;
    SpaceIds?: string | null;
    InventoryDepartmentIds?: string | null;
    CategoryIds?: string | null;
    MasterIds?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type FwStandardSqlServerFwDateTime = {
    Val?: string | null;
};
export type WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryReconciliationReportPhysicalInventoryReconciliationReportRequest = {
    PhysicalInventoryId?: string | null;
    FromDate?: FwStandardSqlServerFwDateTime;
    ToDate?: FwStandardSqlServerFwDateTime;
    AvailableFor?: string | null;
    ItemsCounted?: boolean;
    IncludeOrders?: boolean;
    IncludeOrderBarcodes?: boolean;
    IncludeCountedBarcodes?: boolean;
    ExcludeZeroCostExtended?: boolean;
    OnlyChangedItems?: boolean;
    TrackedbyIds?: string | null;
    SpaceIds?: string | null;
    MasterIds?: string | null;
    InventoryDepartmentIds?: string | null;
    CategoryIds?: string | null;
    TrackedBys?: FwStandardModelsCheckBoxListItem[] | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryRecountAnalysisReportPhysicalInventoryRecountAnalysisReportRequest = {
    PhysicalInventoryId?: string | null;
    SpaceIds?: string | null;
    CategoryIds?: string | null;
    MasterIds?: string | null;
    InventoryDepartmentIds?: string | null;
    IncludeIdenticalCounts?: boolean;
    TrackedBys?: FwStandardModelsCheckBoxListItem[] | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryResultsReportPhysicalInventoryResultsReportRequest = {
    PhysicalInventoryId?: string | null;
    IncludeNoChangeItems?: boolean;
    ShowRetiredBarcodes?: boolean;
    TrackedBys?: FwStandardModelsCheckBoxListItem[] | null;
    SpaceIds?: string | null;
    InventoryDepartmentIds?: string | null;
    CategoryIds?: string | null;
    MasterIds?: string | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsPickListReportPickListReportRequest = {
    PickListId?: string | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingProfitLossReportProfitLossReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateField?: string | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    AgentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    OrderId?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingProjectManagerBillingReportProjectManagerBillingReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    IncludeNoCharge?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    ProjectManagerId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsAccountingReportsPurchaseGlDetailReportPurchaseGlDetailReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsPurchaseOrderAccrualsPurchaseOrderAccrualsRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    VendorId?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Activities?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    AccrualsThrough?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsPurchaseOrderMasterReportPurchaseOrderMasterReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    VendorId?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Activities?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsPurchaseOrderPaymentScheduleReportPurchaseOrderPaymentScheduleReportRequest = {
    PurchaseOrderId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsPurchaseOrderReceiveListPurchaseOrderReceiveListRequest = {
    PurchaseOrderId?: string | null;
    WarehouseId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsPurchaseOrderReportPurchaseOrderReportRequest = {
    PurchaseOrderId?: string | null;
    ReportView?: WebApiModulesReportsOrderReportsOrderReportReportViewType;
    ExcludeZeroConsignorFee?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsPurchaseOrderReportsPurchaseOrderReturnListPurchaseOrderReturnListRequest = {
    PurchaseOrderId?: string | null;
    WarehouseId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsPurchaseOrderStatusDetailReportPurchaseOrderStatusDetailReportRequest = {
    PurchaseOrderId?: string | null;
    View?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsPurchaseOrderStatusSummaryReportPurchaseOrderStatusSummaryReportRequest = {
    PurchaseOrderId?: string | null;
    View?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsPurchaseOrderSummaryReportPurchaseOrderSummaryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    ProjectId?: string | null;
    VendorId?: string | null;
    DepartmentId?: string | null;
    PoApprovalStatusId?: string | null;
    Status?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsQuikActivityReportQuikActivityReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OrderType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    ActivityTypeId?: string | null;
    InventoryTypeId?: string | null;
    AgentId?: string | null;
    DealId?: string | null;
    IncludeCompleted?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsQuikInContractReportQuikInContractReportRequest = {
    ShowSwappedItems?: boolean | null;
    ExchangeContractId?: string | null;
    ContractId?: string | null;
    AppLanguageId?: string | null;
    ContractType?: string | null;
    IncludeSubVendor?: boolean | null;
    ShowImages?: boolean | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportRequest = {
    ContractId?: string | null;
    QuikReceiptId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportItemL = {
    RowType?: string | null;
    Description?: string | null;
    Quantity?: string | null;
    PrintDate?: string | null;
    PrintTime?: string | null;
    PrintDateTime?: string | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _Original?: FwStandardBusinessLogicFwBusinessLogic;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportItemLRead = {
    RowType?: string | null;
    Description?: string | null;
    Quantity?: string | null;
    PrintDate?: string | null;
    PrintTime?: string | null;
    PrintDateTime?: string | null;
    DateFields?: string[] | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _Original?: FwStandardBusinessLogicFwBusinessLogicRead;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptMetaData = {
    PersonSignature?: string | null;
    QuikReceiptId?: string | null;
    QuikReceiptTermsConditionsHtml?: string | null;
    PersonPrintedName?: string | null;
    Note?: string | null;
};
export type WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportL = {
    SessionNo?: number | null;
    Customer?: string | null;
    WarehouseId?: string | null;
    EstRentFrom?: string | null;
    EstRentTo?: string | null;
    QuikReceiptTermsConditionsId?: string | null;
    Items?: WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportItemL[] | null;
    MetaData?: WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptMetaData;
    DealId?: string | null;
    Deal?: string | null;
    DealNumber?: string | null;
    DealNumberAndDeal?: string | null;
    OrderId?: string | null;
    OrderNumber?: string | null;
    OrderDate?: string | null;
    OrderStatus?: string | null;
    OrderStatusAsOfDate?: string | null;
    OrderPoNumber?: string | null;
    OrderType?: string | null;
    OrderTypeDescription?: string | null;
    OrderDescription?: string | null;
    OrderNumberAndDescription?: string | null;
    OrderBillingStartDate?: string | null;
    OrderBillingEndDate?: string | null;
    OrderLocation?: string | null;
    DeliveryTargetShipDate?: string | null;
    DeliveryRequiredDate?: string | null;
    DeliveryDeliveryType?: string | null;
    DeliveryDeliveryNotes?: string | null;
    RowType?: string | null;
    ContractId?: string | null;
    ContractNumber?: string | null;
    ContractDate?: string | null;
    ContractTime?: string | null;
    ContractDateAndTime?: string | null;
    ContractType?: string | null;
    ExchangeContractId?: string | null;
    HasPendingExchange?: boolean | null;
    HasRental?: boolean | null;
    HasSales?: boolean | null;
    InputByUserId?: string | null;
    BillingDate?: string | null;
    OfficeLocation?: string | null;
    OfficeLocationCompany?: string | null;
    OfficeLocationAddress1?: string | null;
    OfficeLocationAddress2?: string | null;
    OfficeLocationCityStateZipCode?: string | null;
    OfficeLocationCityStateZipCodeCountry?: string | null;
    OfficeLocationPhone?: string | null;
    OfficeLocationFax?: string | null;
    Warehouse?: string | null;
    WarehouseAddress1?: string | null;
    WarehouseAddress2?: string | null;
    WarehouseCityStateZipCode?: string | null;
    WarehouseCityStateZipCodeCountry?: string | null;
    WarehousePhone?: string | null;
    WarehouseFax?: string | null;
    IssuedToCompany?: string | null;
    IssuedToAttentionTo1?: string | null;
    IssuedToAttentionTo2?: string | null;
    IssuedToAddress1?: string | null;
    IssuedToAddress2?: string | null;
    IssuedToCity?: string | null;
    IssuedToState?: string | null;
    IssuedToZipCode?: string | null;
    IssuedToCountry?: string | null;
    IssuedToPhone?: string | null;
    IssuedToFax?: string | null;
    UsageDates?: string | null;
    BillingCycle?: string | null;
    PaymentTerms?: string | null;
    Agent?: string | null;
    AgentEmail?: string | null;
    AgentPhoneAndExtension?: string | null;
    AgentFax?: string | null;
    AgentMobilePhone?: string | null;
    Department?: string | null;
    DeliveryContact?: string | null;
    DeliveryLocation?: string | null;
    DeliveryAttention?: string | null;
    DeliveryAddress1?: string | null;
    DeliveryAddress2?: string | null;
    DeliveryCity?: string | null;
    DeliveryState?: string | null;
    DeliveryZip?: string | null;
    DeliveryCityStateZipCode?: string | null;
    DeliveryCountry?: string | null;
    DeliveryContactPhone?: string | null;
    DeliveryType?: string | null;
    DeliveryCarrier?: string | null;
    DeliveryShipVia?: string | null;
    TermsAndConditionsId?: string | null;
    TermsAndConditionsHtml?: string | null;
    TermsAndConditionsNewPage?: boolean | null;
    PersonPrintName?: string | null;
    PersonSignature?: string | null;
    Note?: string | null;
    OfficeLocationId?: string | null;
    Logosrc?: string | null;
    PrintDate?: string | null;
    PrintTime?: string | null;
    PrintDateTime?: string | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _Original?: FwStandardBusinessLogicFwBusinessLogic;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportLRead = {
    SessionNo?: number | null;
    Customer?: string | null;
    WarehouseId?: string | null;
    EstRentFrom?: string | null;
    EstRentTo?: string | null;
    QuikReceiptTermsConditionsId?: string | null;
    Items?: WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportItemLRead[] | null;
    MetaData?: WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptMetaData;
    DealId?: string | null;
    Deal?: string | null;
    DealNumber?: string | null;
    DealNumberAndDeal?: string | null;
    OrderId?: string | null;
    OrderNumber?: string | null;
    OrderDate?: string | null;
    OrderStatus?: string | null;
    OrderStatusAsOfDate?: string | null;
    OrderPoNumber?: string | null;
    OrderType?: string | null;
    OrderTypeDescription?: string | null;
    OrderDescription?: string | null;
    OrderNumberAndDescription?: string | null;
    OrderBillingStartDate?: string | null;
    OrderBillingEndDate?: string | null;
    OrderLocation?: string | null;
    DeliveryTargetShipDate?: string | null;
    DeliveryRequiredDate?: string | null;
    DeliveryDeliveryType?: string | null;
    DeliveryDeliveryNotes?: string | null;
    RowType?: string | null;
    ContractId?: string | null;
    ContractNumber?: string | null;
    ContractDate?: string | null;
    ContractTime?: string | null;
    ContractDateAndTime?: string | null;
    ContractType?: string | null;
    ExchangeContractId?: string | null;
    HasPendingExchange?: boolean | null;
    HasRental?: boolean | null;
    HasSales?: boolean | null;
    InputByUserId?: string | null;
    BillingDate?: string | null;
    OfficeLocation?: string | null;
    OfficeLocationCompany?: string | null;
    OfficeLocationAddress1?: string | null;
    OfficeLocationAddress2?: string | null;
    OfficeLocationCityStateZipCode?: string | null;
    OfficeLocationCityStateZipCodeCountry?: string | null;
    OfficeLocationPhone?: string | null;
    OfficeLocationFax?: string | null;
    Warehouse?: string | null;
    WarehouseAddress1?: string | null;
    WarehouseAddress2?: string | null;
    WarehouseCityStateZipCode?: string | null;
    WarehouseCityStateZipCodeCountry?: string | null;
    WarehousePhone?: string | null;
    WarehouseFax?: string | null;
    IssuedToCompany?: string | null;
    IssuedToAttentionTo1?: string | null;
    IssuedToAttentionTo2?: string | null;
    IssuedToAddress1?: string | null;
    IssuedToAddress2?: string | null;
    IssuedToCity?: string | null;
    IssuedToState?: string | null;
    IssuedToZipCode?: string | null;
    IssuedToCountry?: string | null;
    IssuedToPhone?: string | null;
    IssuedToFax?: string | null;
    UsageDates?: string | null;
    BillingCycle?: string | null;
    PaymentTerms?: string | null;
    Agent?: string | null;
    AgentEmail?: string | null;
    AgentPhoneAndExtension?: string | null;
    AgentFax?: string | null;
    AgentMobilePhone?: string | null;
    Department?: string | null;
    DeliveryContact?: string | null;
    DeliveryLocation?: string | null;
    DeliveryAttention?: string | null;
    DeliveryAddress1?: string | null;
    DeliveryAddress2?: string | null;
    DeliveryCity?: string | null;
    DeliveryState?: string | null;
    DeliveryZip?: string | null;
    DeliveryCityStateZipCode?: string | null;
    DeliveryCountry?: string | null;
    DeliveryContactPhone?: string | null;
    DeliveryType?: string | null;
    DeliveryCarrier?: string | null;
    DeliveryShipVia?: string | null;
    TermsAndConditionsId?: string | null;
    TermsAndConditionsHtml?: string | null;
    TermsAndConditionsNewPage?: boolean | null;
    PersonPrintName?: string | null;
    PersonSignature?: string | null;
    Note?: string | null;
    OfficeLocationId?: string | null;
    Logosrc?: string | null;
    PrintDate?: string | null;
    PrintTime?: string | null;
    PrintDateTime?: string | null;
    DateFields?: string[] | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _Original?: FwStandardBusinessLogicFwBusinessLogicRead;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type WebApiModulesReportsBillingQuoteBillingScheduleReportQuoteBillingScheduleReportRequest = {
    QuoteId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsQuoteOrderMasterReportQuoteOrderMasterReportRequest = {
    FromDate?: string | null;
    ToDate?: string | null;
    DateType?: string | null;
    FilterDates?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealTypeId?: string | null;
    DealStatusId?: string | null;
    DealId?: string | null;
    AgentId?: string | null;
    OrderType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    QuoteStatus?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    OrderStatus?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsQuoteReportQuoteReportRequest = {
    QuoteId?: string | null;
    Id?: string | null;
    ReportView?: WebApiModulesReportsOrderReportsOrderReportReportViewType;
    PrintEntireGroup?: boolean | null;
    PrintInventoryType?: boolean | null;
    PrintCategory?: boolean | null;
    PrintTotalReplacementCost?: boolean | null;
    PrintInventoryTypeSubTotal?: boolean | null;
    PrintCategorySubTotal?: boolean | null;
    PrintZeroExtended?: boolean | null;
    PrintLineItemNotes?: boolean | null;
    PrintSplitLines?: boolean | null;
    PrintGrandTotal?: boolean | null;
    PrintGrossTotal?: boolean | null;
    PrintGrandDiscount?: boolean | null;
    PrintGrandWeekly?: boolean | null;
    PrintGrandMonthly?: boolean | null;
    PrintGrandPeriod?: boolean | null;
    PrintGrandHiatus?: boolean | null;
    PrintActivityWeekly?: boolean | null;
    PrintActivityMonthly?: boolean | null;
    PrintActivityPeriod?: boolean | null;
    LanguageId?: string | null;
    FilterRentalAndSaleItems?: boolean | null;
    RentalAndSaleItemsToInclude?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRateUpdateReportRateUpdateReportRequest = {
    PendingModificationsOnly?: boolean | null;
    RateUpdateBatchId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsChargeProcessingReportsReceiptBatchReportReceiptBatchReportRequest = {
    BatchId?: string | null;
    FromBatchNumber?: string | null;
    ToBatchNumber?: string | null;
    BatchFromDate?: string | null;
    BatchToDate?: string | null;
    BatchRange?: string | null;
    LocationId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingReportsReceiptReportReceiptReportRequest = {
    ReceiptId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsReceiveContractReportReceiveContractReportRequest = {
    ContractId?: string | null;
    AppLanguageId?: string | null;
    ContractType?: string | null;
    IncludeSubVendor?: boolean | null;
    ShowImages?: boolean | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryActivityByDateReportRentalInventoryActivityByDateReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    FixedAsset?: WebApiIncludeExcludeAll;
    ExcludeMigrates?: boolean | null;
    OwnershipTypes?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryAssetAttributeReportRentalInventoryAssetAttributeReportRequest = {
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    FixedAsset?: WebApiIncludeExcludeAll;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryAvailabilityReportRentalInventoryAvailabilityReportRequest = {
    FromDate?: string;
    ToDate?: string;
    IsDetail?: boolean | null;
    IncludeZeroQuantity?: boolean | null;
    OnlyIncludeLowAndNegative?: boolean | null;
    OnlyIncludeNegative?: boolean | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    Classifications?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    FixedAsset?: WebApiIncludeExcludeAll;
    RefreshIfNeeded?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryMasterReportRentalInventoryMasterReportRequest = {
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    OriginalShowId?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    OwnershipTypes?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    FixedAsset?: WebApiIncludeExcludeAll;
    IncludeRetiredSerializedItems?: boolean | null;
    IncludeItemsReceivedInDateRange?: boolean | null;
    ReceiveFromDate?: string | null;
    ReceiveToDate?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryMovementReportRentalInventoryMovementReportRequest = {
    FromDate?: string;
    ToDate?: string;
    IncludeZeroOwned?: boolean | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    Value?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryOutageReportRentalInventoryOutageReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    OutageFilterMode?: string | null;
    OutageFilterAmount?: number | null;
    FilterDatesByOutagePercent?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryQcRequiredReportRentalInventoryQcRequiredReportRequest = {
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    InContractId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryQuantityOwnedReportRentalInventoryQuantityOwnedReportRequest = {
    AsOfDate?: string;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    FixedAsset?: WebApiIncludeExcludeAll;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryStatusAndRevenueReportRentalInventoryStatusAndRevenueReportRequest = {
    IncludePeriodRevenue?: boolean | null;
    RevenueFromDate?: string | null;
    RevenueToDate?: string | null;
    RevenueFilterMode?: string | null;
    RevenueFilterAmount?: number | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    IncludeNotRentedSince?: boolean | null;
    NotRentedSinceDate?: string | null;
    IncludeZeroOwned?: boolean | null;
    ShowStagedAndOut?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventorySummaryByRankReportRentalInventorySummaryByRankReportRequest = {
    AsOfDate?: string;
    WarehouseId?: string | null;
    Ranks?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryUnusedItemsReportRentalInventoryUnusedItemsReportRequest = {
    AsOfDate?: string;
    IncludeZeroQuantity?: boolean | null;
    DaysUnused?: number | null;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    DealId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryUsageByCustomerReportRentalInventoryUsageByCustomerReportRequest = {
    FromDate?: string;
    ToDate?: string;
    UtilizationFilterMode?: string | null;
    UtilizationFilterAmount?: number | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    CustomerId?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    ExcludeZeroOwned?: boolean | null;
    FilterDatesByUtilizationPercent?: boolean | null;
    OnlyIncludeItemsThatAreTheMainItemOfAComplete?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryUsageReportRentalInventoryUsageReportRequest = {
    FromDate?: string;
    ToDate?: string;
    UtilizationFilterMode?: string | null;
    UtilizationFilterAmount?: number | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    ExcludeZeroOwned?: boolean | null;
    FilterDatesByUtilizationPercent?: boolean | null;
    OnlyIncludeItemsThatAreTheMainItemOfAComplete?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalInventoryValueReportRentalInventoryValueReportRequest = {
    FromDate?: string;
    ToDate?: string;
    IncludeOwned?: boolean | null;
    IncludeConsigned?: boolean | null;
    IncludeZeroQuantity?: boolean | null;
    GroupByICode?: boolean | null;
    QuantityValueBasedOn?: string | null;
    SerializedValueBasedOn?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Summary?: boolean | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsRentalLostAndDamagedBillingHistoryReportRentalLostAndDamagedBillingHistoryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    ExcludeRetiredItems?: boolean | null;
    ExcludeUnretiredItems?: boolean | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    RetiredReasonId?: string | null;
    UnretiredReasonId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRepairReportsRepairOrderReportRepairOrderReportRequest = {
    RepairId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRepairOrderReportsRepairOrderStatusReportRepairOrderStatusReportRequest = {
    RepairOrderStatus?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Priority?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Billable?: boolean | null;
    Billed?: boolean | null;
    Owned?: boolean | null;
    DaysInRepair?: number | null;
    DaysInRepairFilterMode?: string | null;
    IncludeOutsideRepairsOnly?: boolean | null;
    IncludeDamageNotes?: boolean | null;
    IncludeCorrectionNotes?: boolean | null;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    RepairItemStatusId?: string | null;
    VendorId?: string | null;
    VendorRepairItemStatusId?: string | null;
    DealId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRepairOrderReportsRepairTagRepairTagRequest = {
    RepairId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type FwStandardModelsFwQueryFilter = {
    /** The DataField name to filter on. */
    Field: string;
    /** Comparison operator: = (equals), <> (not equals) */
    Op: string;
    /** The value of the DataField to filter on. */
    Value?: string | null;
};
export type WebApiModulesReportsSharedReportSettingsReportSettings = {
    /** Format: Integer, IsPrimaryKey: true */
    Id?: number | null;
    /** Format: Text, Required: true */
    WebUserId?: string | null;
    /** Format: Text, Required: true */
    ReportName?: string | null;
    /** Format: Text, Required: true */
    Description?: string | null;
    /** Format: Text */
    Settings?: string | null;
    /** Format: Text */
    ExcelSettings?: string | null;
    /** Format: UTCDateTime */
    DateStamp?: string | null;
    AuditNote?: string | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Original?: FwStandardBusinessLogicFwBusinessLogic;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type WebApiModulesReportsSharedReportSettingsReportSettingsRead = {
    /** Format: Integer, IsPrimaryKey: true */
    Id?: number | null;
    /** Format: Text, Required: true */
    WebUserId?: string | null;
    /** Format: Text, Required: true */
    ReportName?: string | null;
    /** Format: Text, Required: true */
    Description?: string | null;
    /** Format: Text */
    Settings?: string | null;
    /** Format: Text */
    ExcelSettings?: string | null;
    /** Format: UTCDateTime */
    DateStamp?: string | null;
    AuditNote?: string | null;
    RecordTitle?: string | null;
    _Fields?: FwStandardBusinessLogicFwBusinessLogicFieldDefinition[] | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Original?: FwStandardBusinessLogicFwBusinessLogicRead;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type FwStandardModelsFwQueryResponseWebApiModulesReportsSharedReportSettingsReportSettingsLogic = {
    Items?: WebApiModulesReportsSharedReportSettingsReportSettings[] | null;
    PageNo?: number;
    PageSize?: number;
    TotalItems?: number;
    Sort?: string | null;
};
export type FwStandardModelsFwQueryResponseWebApiModulesReportsSharedReportSettingsReportSettingsLogicRead = {
    Items?: WebApiModulesReportsSharedReportSettingsReportSettingsRead[] | null;
    PageNo?: number;
    PageSize?: number;
    TotalItems?: number;
    Sort?: string | null;
};
export type WebApiModulesReportsRentalInventoryReportsRetiredRentalInventoryReportRetiredRentalInventoryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    IncludeUnretired?: boolean | null;
    Ranks?: string | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    RetiredReasonId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsReturnContractReportReturnContractReportRequest = {
    ContractId?: string | null;
    AppLanguageId?: string | null;
    ContractType?: string | null;
    IncludeSubVendor?: boolean | null;
    ShowImages?: boolean | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsReturnedToInventoryReportReturnedToInventoryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    DealId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    UserId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsReturnListReportReturnListReportRequest = {
    DealId?: string | null;
    DepartmentId?: string | null;
    OrderId?: string | null;
    SortBy?: string | null;
    PrintBarcodeMode?: boolean | null;
    IncludeSales?: boolean | null;
    WarehouseId?: string | null;
    ContractId?: string | null;
    OrderIds?: string | null;
    IncludeTrackedByBarcode?: boolean | null;
    PrintBarcodes?: boolean | null;
    PaginateByInventoryType?: boolean | null;
    AddBoxforMeterReading?: boolean | null;
    PrintICodeColumn?: boolean | null;
    PrintAisleShelf?: boolean | null;
    PrintOut?: boolean | null;
    PrintIn?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsReturnOnAssetReportReturnOnAssetReportRequest = {
    UsePeriodSelector?: boolean | null;
    ReportYear?: string | null;
    ReportPeriod?: string | null;
    UseDateRange?: boolean | null;
    FromDate?: string | null;
    ToDate?: string | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    IncludeZeroCurrentOwned?: boolean | null;
    IncludeZeroAverageOwned?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsDealReportsReturnReceiptReportReturnReceiptReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OnlyIncludeItemsStillUnassigned?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingReportsRevenueReportRevenueReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsSalesInventoryReportsSalesBackorderReportSalesBackorderReportRequest = {
    VendorId?: string | null;
    DealId?: string | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CustomerId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsSalesInventoryReportsSalesHistoryReportSalesHistoryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    Summary?: boolean | null;
    IncludeSalesTax?: boolean | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    OfficeLocationId?: string | null;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    OrderId?: string | null;
    VendorId?: string | null;
    InventoryTypeId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsSalesInventoryReportsSalesInventoryMasterReportSalesInventoryMasterReportRequest = {
    IncludePeriodRevenue?: boolean | null;
    RevenueFromDate?: string | null;
    RevenueToDate?: string | null;
    RevenueFilterMode?: string | null;
    RevenueFilterAmount?: number | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    ExcludeZeroOwned?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsSalesInventoryReportsSalesInventoryReorderReportSalesInventoryReorderReportRequest = {
    ReorderPointMode?: string | null;
    IncludeZeroReorderPoint?: boolean | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingSalesQuoteBillingReportSalesQuoteBillingReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateField?: string | null;
    OfficeLocationId?: string | null;
    AgentId?: string | null;
    DealId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsBillingSalesRepresentativeBillingReportSalesRepresentativeBillingReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    IncludeNoCharge?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    SalesRepresentativeId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsSetBrochureSetBrochureReportRequest = {
    BrochureId?: string | null;
    Summary?: boolean | null;
    IncludeValue?: string | null;
    PrintOneImagePerPage?: boolean | null;
    PrintHeader?: boolean | null;
    HeaderTitle?: string | null;
    PrintFooter?: boolean | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    DealIds?: string | null;
    OrderIds?: string | null;
    SetIds?: string | null;
    ImageId?: string | null;
    UniqueId1?: string | null;
    UniqueId2?: string | null;
    UniqueId3?: string | null;
    ICode?: string | null;
    Description?: string | null;
    Barcode?: string | null;
    Value?: string | null;
    Quanity?: number | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsShippingCasePackingListReportShippingCasePackingListReportRequest = {
    OrderId?: string | null;
    ItemId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsWarehouseReportsStorageContainerLabelStorageContainerLabelRequest = {
    OrderId?: string | null;
    PrintedByUsersId?: string | null;
    StorageContainerItemId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsSubItemStatusReportSubItemStatusReportRequest = {
    FromDate?: string | null;
    ToDate?: string | null;
    DateType?: string | null;
    OfficeLocationId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    OrderId?: string | null;
    VendorId?: string | null;
    PoClassificationId?: string | null;
    RecType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsSubProfitabilityReportSubProfitabilityReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    OrderId?: string | null;
    VendorId?: string | null;
    PoClassificationId?: string | null;
    RecType?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsSubRentalBillingAnalysisReportSubRentalBillingAnalysisReportRequest = {
    FromDate?: string;
    ToDate?: string;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    DealId?: string | null;
    VendorId?: string | null;
    PoClassificationId?: string | null;
    PurchaseOrderId?: string | null;
    InventoryId?: string | null;
    InvoiceStatus?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    PurchaseOrderStatus?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    IncludeVendorTax?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsOrderReportsSubSalesStagedItemsReportSubSalesStagedItemsReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    IncludeNoCharge?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    AgentId?: string | null;
    CustomerId?: string | null;
    DealId?: string | null;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    Ranks?: string | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesAdministratorTaskSchedulerTaskSteps = {
    TaskStepsId?: number | null;
    TaskId?: number | null;
    Name?: string | null;
    StepNumber?: number | null;
    Type?: string | null;
    Command?: string | null;
    OnSuccessActionDisplay?: string | null;
    OnFailureActionDisplay?: string | null;
    OnSuccessAction?: number | null;
    RetryAttempts?: number | null;
    RetryInterval?: number | null;
    OnFailureAction?: number | null;
    OnSuccessTaskStepsId?: number | null;
    OnFailureTaskStepsId?: number | null;
    OutputFilename?: string | null;
    LastRunOutcome?: number | null;
    LastRunDuration?: number | null;
    LastRunRetries?: number | null;
    DateStamp?: string | null;
    AuditNote?: string | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Original?: FwStandardBusinessLogicFwBusinessLogic;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type WebApiModulesAdministratorTaskSchedulerTaskStepsRead = {
    TaskStepsId?: number | null;
    TaskId?: number | null;
    Name?: string | null;
    StepNumber?: number | null;
    Type?: string | null;
    Command?: string | null;
    OnSuccessActionDisplay?: string | null;
    OnFailureActionDisplay?: string | null;
    OnSuccessAction?: number | null;
    RetryAttempts?: number | null;
    RetryInterval?: number | null;
    OnFailureAction?: number | null;
    OnSuccessTaskStepsId?: number | null;
    OnFailureTaskStepsId?: number | null;
    OutputFilename?: string | null;
    LastRunOutcome?: number | null;
    LastRunDuration?: number | null;
    LastRunRetries?: number | null;
    DateStamp?: string | null;
    AuditNote?: string | null;
    RecordTitle?: string | null;
    _Fields?: FwStandardBusinessLogicFwBusinessLogicFieldDefinition[] | null;
    _Custom?: FwStandardDataFwCustomValue[] | null;
    _DefaultFieldAttributes?: FwStandardDataFwDefaultAttribute[] | null;
    _Original?: FwStandardBusinessLogicFwBusinessLogicRead;
    _Translation?: FwStandardDataFwTranslatedValue[] | null;
    _HasImport?: boolean;
    _CreatedByUserId?: string | null;
    _CreatedByUserName?: string | null;
    _CreatedDateTime?: string | null;
    _ModifiedByUserId?: string | null;
    _ModifiedByUserName?: string | null;
    _ModifiedDateTime?: string | null;
};
export type FwStandardModelsFwQueryResponseWebApiModulesAdministratorTaskSchedulerTaskStepsLogic = {
    Items?: WebApiModulesAdministratorTaskSchedulerTaskSteps[] | null;
    PageNo?: number;
    PageSize?: number;
    TotalItems?: number;
    Sort?: string | null;
};
export type FwStandardModelsFwQueryResponseWebApiModulesAdministratorTaskSchedulerTaskStepsLogicRead = {
    Items?: WebApiModulesAdministratorTaskSchedulerTaskStepsRead[] | null;
    PageNo?: number;
    PageSize?: number;
    TotalItems?: number;
    Sort?: string | null;
};
export type WebApiModulesReportsBillingTaxesPaidReportTaxesPaidReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsTransferFixedAssetOwnershipReportTransferFixedAssetOwnershipReportRequest = {
    FromDate?: string;
    ToDate?: string;
    FromWarehouseId?: string | null;
    ToWarehouseId?: string | null;
    TransferId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    InventoryId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsTransferManifestReportTransferManifestReportRequest = {
    ContractId?: string | null;
    AppLanguageId?: string | null;
    ContractType?: string | null;
    IncludeSubVendor?: boolean | null;
    ShowImages?: boolean | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsTransferReportsTransferOrderReportTransferOrderReportRequest = {
    TransferId?: string | null;
    ReportView?: WebApiModulesReportsOrderReportsOrderReportReportViewType;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsContractReportsTransferReceiptReportTransferReceiptReportRequest = {
    ContractId?: string | null;
    AppLanguageId?: string | null;
    ContractType?: string | null;
    IncludeSubVendor?: boolean | null;
    ShowImages?: boolean | null;
    GroupByShippingCase?: boolean | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsMultiLocationReportsTransferReportTransferReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    FromWarehouseId?: string | null;
    ToWarehouseId?: string | null;
    DepartmentId?: string | null;
    TransferId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsUnretiredRentalInventoryReportUnretiredRentalInventoryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    UnretiredReasonId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsRentalInventoryReportsValueOfOutRentalInventoryReportValueOfOutRentalInventoryReportRequest = {
    AsOfDate?: string;
    WarehouseId?: string | null;
    InventoryTypeId?: string | null;
    CategoryId?: string | null;
    SubCategoryId?: string | null;
    InventoryId?: string | null;
    DealId?: string | null;
    ExcludeHiatus?: boolean;
    OwnershipTypes?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    TrackedBys?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    Ranks?: string | null;
    FixedAsset?: WebApiIncludeExcludeAll;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsChargeProcessingReportsVendorInvoiceBatchReportVendorInvoiceBatchReportRequest = {
    BatchId?: string | null;
    FromBatchNumber?: string | null;
    ToBatchNumber?: string | null;
    BatchFromDate?: string | null;
    BatchToDate?: string | null;
    BatchRange?: string | null;
    LocationId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsVendorReportsVendorInvoiceSummaryReportVendorInvoiceSummaryReportRequest = {
    FromDate?: string;
    ToDate?: string;
    DateType?: string | null;
    Statuses?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    IncludeAccruals?: boolean | null;
    AccrualFromDate?: string | null;
    AccrualToDate?: string | null;
    AccrualsOnly?: boolean | null;
    OfficeLocationId?: string | null;
    DepartmentId?: string | null;
    DealId?: string | null;
    VendorId?: string | null;
    PurchaseOrderId?: string | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsWarehouseReportsWarehouseDispatchReportWarehouseDispatchReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    AgentId?: string | null;
    ActivityTypeId?: string | null;
    ExcludeCompleteOrders?: boolean | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    OrderTypes?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsWarehouseReportsWarehouseInboundReportWarehouseInboundReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    AgentId?: string | null;
    ActivityTypeId?: string | null;
    ExcludeCompleteOrders?: boolean | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    OrderTypes?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export type WebApiModulesReportsWarehouseReportsWarehouseOutboundReportWarehouseOutboundReportRequest = {
    FromDate?: string;
    ToDate?: string;
    WarehouseId?: string | null;
    DepartmentId?: string | null;
    AgentId?: string | null;
    ActivityTypeId?: string | null;
    ExcludeCompleteOrders?: boolean | null;
    SortBy?: FwStandardModelsCheckBoxListItem[] | null;
    OrderTypes?: FwStandardModelsSelectedCheckBoxListItem[] | null;
    UserDepartmentId?: string | null;
    UserLocationId?: string | null;
    UserWarehouseId?: string | null;
    CustomReportLayoutId?: string | null;
    IsSummary?: boolean | null;
    IncludeSubHeadingsAndSubTotals?: boolean;
    IncludeIdColumns?: boolean;
    Locale?: string | null;
    excelfields?: FwStandardModelsCheckBoxListItem[] | null;
    ReportName?: string | null;
    UseEmailTemplate?: boolean | null;
};
export function postApiV1ActiveorderswithuncontracteditemsreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ActiveorderswithuncontracteditemsreportExportexcelxlsx(webApiModulesReportsOrderReportsActiveOrdersWithUncontractedItemsReportActiveOrdersWithUncontractedItemsReportRequest?: WebApiModulesReportsOrderReportsActiveOrdersWithUncontractedItemsReportActiveOrdersWithUncontractedItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsActiveOrdersWithUncontractedItemsReportActiveOrdersWithUncontractedItemsReportRequest
    })));
}
export function postApiV1ActiveorderswithuncontracteditemsreportRunreport(webApiModulesReportsOrderReportsActiveOrdersWithUncontractedItemsReportActiveOrdersWithUncontractedItemsReportRequest?: WebApiModulesReportsOrderReportsActiveOrdersWithUncontractedItemsReportActiveOrdersWithUncontractedItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsActiveOrdersWithUncontractedItemsReportActiveOrdersWithUncontractedItemsReportRequest
    })));
}
export function postApiV1ActiveorderswithuncontracteditemsreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ActiveorderswithuncontracteditemsreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ActiveorderswithuncontracteditemsreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ActiveorderswithuncontracteditemsreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ActiveorderswithuncontracteditemsreportValidateordertypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/validateordertype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ActiveorderswithuncontracteditemsreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ActiveorderswithuncontracteditemsreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/activeorderswithuncontracteditemsreport/preview", {
        ...opts
    }));
}
export function postApiV1AgentbillingreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1AgentbillingreportExportexcelxlsx(webApiModulesReportsBillingAgentBillingReportAgentBillingReportRequest?: WebApiModulesReportsBillingAgentBillingReportAgentBillingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingAgentBillingReportAgentBillingReportRequest
    })));
}
export function postApiV1AgentbillingreportRunreport(webApiModulesReportsBillingAgentBillingReportAgentBillingReportRequest?: WebApiModulesReportsBillingAgentBillingReportAgentBillingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingAgentBillingReportAgentBillingReportRequest
    })));
}
export function postApiV1AgentbillingreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AgentbillingreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AgentbillingreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AgentbillingreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AgentbillingreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1AgentbillingreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1AgentbillingreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/agentbillingreport/preview", {
        ...opts
    }));
}
export function postApiV1AragingreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1AragingreportExportexcelxlsx(webApiModulesReportsAccountingReportsArAgingReportArAgingReportRequest?: WebApiModulesReportsAccountingReportsArAgingReportArAgingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsArAgingReportArAgingReportRequest
    })));
}
export function postApiV1AragingreportRunreport(webApiModulesReportsAccountingReportsArAgingReportArAgingReportRequest?: WebApiModulesReportsAccountingReportsArAgingReportArAgingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsArAgingReportArAgingReportRequest
    })));
}
export function postApiV1AragingreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AragingreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AragingreportValidatedealtypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/validatedealtype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AragingreportValidatedealcsrBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/validatedealcsr/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AragingreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1AragingreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1AragingreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingreport/preview", {
        ...opts
    }));
}
export function postApiV1AragingsummaryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1AragingsummaryreportExportexcelxlsx(webApiModulesReportsAccountingReportsArAgingSummaryReportArAgingSummaryReportRequest?: WebApiModulesReportsAccountingReportsArAgingSummaryReportArAgingSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsArAgingSummaryReportArAgingSummaryReportRequest
    })));
}
export function postApiV1AragingsummaryreportRunreport(webApiModulesReportsAccountingReportsArAgingSummaryReportArAgingSummaryReportRequest?: WebApiModulesReportsAccountingReportsArAgingSummaryReportArAgingSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsArAgingSummaryReportArAgingSummaryReportRequest
    })));
}
export function postApiV1AragingsummaryreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AragingsummaryreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AragingsummaryreportValidatedealtypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/validatedealtype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AragingsummaryreportValidatedealcsrBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/validatedealcsr/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1AragingsummaryreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1AragingsummaryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1AragingsummaryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/aragingsummaryreport/preview", {
        ...opts
    }));
}
export function postApiV1BillinganalysisreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1BillinganalysisreportExportexcelxlsx(webApiModulesReportsBillingBillingAnalysisReportBillingAnalysisReportRequest?: WebApiModulesReportsBillingBillingAnalysisReportBillingAnalysisReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingBillingAnalysisReportBillingAnalysisReportRequest
    })));
}
export function postApiV1BillinganalysisreportRunreport(webApiModulesReportsBillingBillingAnalysisReportBillingAnalysisReportRequest?: WebApiModulesReportsBillingBillingAnalysisReportBillingAnalysisReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingBillingAnalysisReportBillingAnalysisReportRequest
    })));
}
export function postApiV1BillinganalysisreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillinganalysisreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillinganalysisreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillinganalysisreportValidateprojectBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/validateproject/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillinganalysisreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1BillinganalysisreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1BillinganalysisreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billinganalysisreport/preview", {
        ...opts
    }));
}
export function postApiV1BillingprogressreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1BillingprogressreportExportexcelxlsx(webApiModulesReportsBillingBillingProgressReportBillingProgressReportRequest?: WebApiModulesReportsBillingBillingProgressReportBillingProgressReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingBillingProgressReportBillingProgressReportRequest
    })));
}
export function postApiV1BillingprogressreportRunreport(webApiModulesReportsBillingBillingProgressReportBillingProgressReportRequest?: WebApiModulesReportsBillingBillingProgressReportBillingProgressReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingBillingProgressReportBillingProgressReportRequest
    })));
}
export function postApiV1BillingprogressreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingprogressreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingprogressreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingprogressreportValidatedealcsrBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/validatedealcsr/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingprogressreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingprogressreportValidatedealtypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/validatedealtype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingprogressreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1BillingprogressreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1BillingprogressreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingprogressreport/preview", {
        ...opts
    }));
}
export function postApiV1BillingschedulereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingschedulereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1BillingschedulereportRunreport(webApiModulesReportsBillingBillingScheduleReportBillingScheduleReportRequest?: WebApiModulesReportsBillingBillingScheduleReportBillingScheduleReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingschedulereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingBillingScheduleReportBillingScheduleReportRequest
    })));
}
export function postApiV1BillingschedulereportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingschedulereport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1BillingschedulereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingschedulereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1BillingschedulereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingschedulereport/preview", {
        ...opts
    }));
}
export function postApiV1BillingstatementreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1BillingstatementreportExportexcelxlsx(webApiModulesReportsBillingBillingStatementReportBillingStatementReportRequest?: WebApiModulesReportsBillingBillingStatementReportBillingStatementReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingBillingStatementReportBillingStatementReportRequest
    })));
}
export function postApiV1BillingstatementreportRunreport(webApiModulesReportsBillingBillingStatementReportBillingStatementReportRequest?: WebApiModulesReportsBillingBillingStatementReportBillingStatementReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingBillingStatementReportBillingStatementReportRequest
    })));
}
export function postApiV1BillingstatementreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingstatementreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingstatementreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingstatementreportValidatedealstatusBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/validatedealstatus/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BillingstatementreportValidatedealtypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/validatedealtype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1BillingstatementreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1BillingstatementreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/billingstatementreport/preview", {
        ...opts
    }));
}
export function postApiV1BrochureanalysisreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/brochureanalysisreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1BrochureanalysisreportExportexcelxlsx(webApiModulesReportsPropsWardrobeReportsBrochureAnalysisReportBrochureAnalysisReportRequest?: WebApiModulesReportsPropsWardrobeReportsBrochureAnalysisReportBrochureAnalysisReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/brochureanalysisreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsBrochureAnalysisReportBrochureAnalysisReportRequest
    })));
}
export function postApiV1BrochureanalysisreportRunreport(webApiModulesReportsPropsWardrobeReportsBrochureAnalysisReportBrochureAnalysisReportRequest?: WebApiModulesReportsPropsWardrobeReportsBrochureAnalysisReportBrochureAnalysisReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/brochureanalysisreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsBrochureAnalysisReportBrochureAnalysisReportRequest
    })));
}
export function postApiV1BrochureanalysisreportValidateoriginalshowBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/brochureanalysisreport/validateoriginalshow/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1BrochureanalysisreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/brochureanalysisreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1BrochureanalysisreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/brochureanalysisreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1BrochureanalysisreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/brochureanalysisreport/preview", {
        ...opts
    }));
}
export function postApiV1ChangeauditreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/changeauditreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ChangeauditreportExportexcelxlsx(webApiModulesReportsChangeAuditReportsChangeAuditReportChangeAuditReportRequest?: WebApiModulesReportsChangeAuditReportsChangeAuditReportChangeAuditReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/changeauditreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsChangeAuditReportsChangeAuditReportChangeAuditReportRequest
    })));
}
export function postApiV1ChangeauditreportRunreport(webApiModulesReportsChangeAuditReportsChangeAuditReportChangeAuditReportRequest?: WebApiModulesReportsChangeAuditReportsChangeAuditReportChangeAuditReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/changeauditreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsChangeAuditReportsChangeAuditReportChangeAuditReportRequest
    })));
}
export function postApiV1ChangeauditreportValidatewebusersBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/changeauditreport/validatewebusers/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ChangeauditreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/changeauditreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ChangeauditreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/changeauditreport/preview", {
        ...opts
    }));
}
export function postApiV1ConsignedinventoryorderhistoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ConsignedinventoryorderhistoryreportExportexcelxlsx(webApiModulesReportsConsignedInventoryOrderHistoryReportConsignedInventoryOrderHistoryReportRequest?: WebApiModulesReportsConsignedInventoryOrderHistoryReportConsignedInventoryOrderHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignedInventoryOrderHistoryReportConsignedInventoryOrderHistoryReportRequest
    })));
}
export function postApiV1ConsignedinventoryorderhistoryreportRunreport(webApiModulesReportsConsignedInventoryOrderHistoryReportConsignedInventoryOrderHistoryReportRequest?: WebApiModulesReportsConsignedInventoryOrderHistoryReportConsignedInventoryOrderHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignedInventoryOrderHistoryReportConsignedInventoryOrderHistoryReportRequest
    })));
}
export function postApiV1ConsignedinventoryorderhistoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryorderhistoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryorderhistoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryorderhistoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryorderhistoryreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryorderhistoryreportValidateconsignoragreementBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/validateconsignoragreement/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryorderhistoryreportValidateconsignorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/validateconsignor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ConsignedinventoryorderhistoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ConsignedinventoryorderhistoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryorderhistoryreport/preview", {
        ...opts
    }));
}
export function postApiV1ConsignedinventoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ConsignedinventoryreportExportexcelxlsx(webApiModulesReportsConsignedInventoryReportConsignedInventoryReportRequest?: WebApiModulesReportsConsignedInventoryReportConsignedInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignedInventoryReportConsignedInventoryReportRequest
    })));
}
export function postApiV1ConsignedinventoryreportRunreport(webApiModulesReportsConsignedInventoryReportConsignedInventoryReportRequest?: WebApiModulesReportsConsignedInventoryReportConsignedInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignedInventoryReportConsignedInventoryReportRequest
    })));
}
export function postApiV1ConsignedinventoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryreportValidateconsignoragreementBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/validateconsignoragreement/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignedinventoryreportValidateconsignorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/validateconsignor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ConsignedinventoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ConsignedinventoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignedinventoryreport/preview", {
        ...opts
    }));
}
export function postApiV1ConsignorinventorystatusandlocationreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorinventorystatusandlocationreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ConsignorinventorystatusandlocationreportExportexcelxlsx(webApiModulesReportsConsignorInventoryStatusAndLocationReportConsignorInventoryStatusAndLocationReportRequest?: WebApiModulesReportsConsignorInventoryStatusAndLocationReportConsignorInventoryStatusAndLocationReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorinventorystatusandlocationreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignorInventoryStatusAndLocationReportConsignorInventoryStatusAndLocationReportRequest
    })));
}
export function postApiV1ConsignorinventorystatusandlocationreportRunreport(webApiModulesReportsConsignorInventoryStatusAndLocationReportConsignorInventoryStatusAndLocationReportRequest?: WebApiModulesReportsConsignorInventoryStatusAndLocationReportConsignorInventoryStatusAndLocationReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorinventorystatusandlocationreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignorInventoryStatusAndLocationReportConsignorInventoryStatusAndLocationReportRequest
    })));
}
export function postApiV1ConsignorinventorystatusandlocationreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorinventorystatusandlocationreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignorinventorystatusandlocationreportValidateconsignoragreementBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorinventorystatusandlocationreport/validateconsignoragreement/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignorinventorystatusandlocationreportValidateconsignorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorinventorystatusandlocationreport/validateconsignor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ConsignorinventorystatusandlocationreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorinventorystatusandlocationreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ConsignorinventorystatusandlocationreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorinventorystatusandlocationreport/preview", {
        ...opts
    }));
}
export function postApiV1ConsignoritemsreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignoritemsreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ConsignoritemsreportExportexcelxlsx(webApiModulesReportsConsignmentReportsConsignorItemsReportConsignorItemsReportRequest?: WebApiModulesReportsConsignmentReportsConsignorItemsReportConsignorItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignoritemsreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignmentReportsConsignorItemsReportConsignorItemsReportRequest
    })));
}
export function postApiV1ConsignoritemsreportRunreport(webApiModulesReportsConsignmentReportsConsignorItemsReportConsignorItemsReportRequest?: WebApiModulesReportsConsignmentReportsConsignorItemsReportConsignorItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignoritemsreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignmentReportsConsignorItemsReportConsignorItemsReportRequest
    })));
}
export function postApiV1ConsignoritemsreportValidateconsignoragreementBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignoritemsreport/validateconsignoragreement/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignoritemsreportValidateconsignorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignoritemsreport/validateconsignor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ConsignoritemsreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignoritemsreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ConsignoritemsreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignoritemsreport/preview", {
        ...opts
    }));
}
export function postApiV1ConsignorsettlementreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorsettlementreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ConsignorsettlementreportExportexcelxlsx(webApiModulesReportsConsignorSettlementReportConsignorSettlementReportRequest?: WebApiModulesReportsConsignorSettlementReportConsignorSettlementReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorsettlementreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignorSettlementReportConsignorSettlementReportRequest
    })));
}
export function postApiV1ConsignorsettlementreportRunreport(webApiModulesReportsConsignorSettlementReportConsignorSettlementReportRequest?: WebApiModulesReportsConsignorSettlementReportConsignorSettlementReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorsettlementreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignorSettlementReportConsignorSettlementReportRequest
    })));
}
export function postApiV1ConsignorsettlementreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorsettlementreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignorsettlementreportValidateconsignoragreementBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorsettlementreport/validateconsignoragreement/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignorsettlementreportValidateconsignorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorsettlementreport/validateconsignor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ConsignorsettlementreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorsettlementreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ConsignorsettlementreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorsettlementreport/preview", {
        ...opts
    }));
}
export function postApiV1ConsignorstatementreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorstatementreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ConsignorstatementreportExportexcelxlsx(webApiModulesReportsConsignorStatementReportConsignorStatementReportRequest?: WebApiModulesReportsConsignorStatementReportConsignorStatementReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorstatementreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignorStatementReportConsignorStatementReportRequest
    })));
}
export function postApiV1ConsignorstatementreportRunreport(webApiModulesReportsConsignorStatementReportConsignorStatementReportRequest?: WebApiModulesReportsConsignorStatementReportConsignorStatementReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorstatementreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsConsignorStatementReportConsignorStatementReportRequest
    })));
}
export function postApiV1ConsignorstatementreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorstatementreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignorstatementreportValidateconsignoragreementBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorstatementreport/validateconsignoragreement/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ConsignorstatementreportValidateconsignorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorstatementreport/validateconsignor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ConsignorstatementreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorstatementreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ConsignorstatementreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/consignorstatementreport/preview", {
        ...opts
    }));
}
export function postApiV1ContainerpackinglistRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/containerpackinglist/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ContainerpackinglistRunreport(webApiModulesReportsWarehouseReportsContainerPackingListContainerPackingListRequest?: WebApiModulesReportsWarehouseReportsContainerPackingListContainerPackingListRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/containerpackinglist/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsContainerPackingListContainerPackingListRequest
    })));
}
export function getApiV1ContainerpackinglistEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/containerpackinglist/emptyobject", {
        ...opts
    }));
}
export function getApiV1ContainerpackinglistPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/containerpackinglist/preview", {
        ...opts
    }));
}
export function postApiV1ContractrevisionreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/contractrevisionreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ContractrevisionreportExportexcelxlsx(webApiModulesReportsContractReportsContractRevisionReportContractRevisionReportRequest?: WebApiModulesReportsContractReportsContractRevisionReportContractRevisionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/contractrevisionreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsContractRevisionReportContractRevisionReportRequest
    })));
}
export function postApiV1ContractrevisionreportRunreport(webApiModulesReportsContractReportsContractRevisionReportContractRevisionReportRequest?: WebApiModulesReportsContractReportsContractRevisionReportContractRevisionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/contractrevisionreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsContractRevisionReportContractRevisionReportRequest
    })));
}
export function postApiV1ContractrevisionreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/contractrevisionreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ContractrevisionreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/contractrevisionreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ContractrevisionreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/contractrevisionreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ContractrevisionreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/contractrevisionreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ContractrevisionreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/contractrevisionreport/preview", {
        ...opts
    }));
}
export function postApiV1CreateinvoiceprocessreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/createinvoiceprocessreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1CreateinvoiceprocessreportExportexcelxlsx(webApiModulesReportsBillingCreateInvoiceProcessReportCreateInvoiceProcessReportRequest?: WebApiModulesReportsBillingCreateInvoiceProcessReportCreateInvoiceProcessReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/createinvoiceprocessreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingCreateInvoiceProcessReportCreateInvoiceProcessReportRequest
    })));
}
export function postApiV1CreateinvoiceprocessreportRunreport(webApiModulesReportsBillingCreateInvoiceProcessReportCreateInvoiceProcessReportRequest?: WebApiModulesReportsBillingCreateInvoiceProcessReportCreateInvoiceProcessReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/createinvoiceprocessreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingCreateInvoiceProcessReportCreateInvoiceProcessReportRequest
    })));
}
export function postApiV1CreateinvoiceprocessreportValidateinvoicecreationbatchBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/createinvoiceprocessreport/validateinvoicecreationbatch/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1CreateinvoiceprocessreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/createinvoiceprocessreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1CreateinvoiceprocessreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/createinvoiceprocessreport/preview", {
        ...opts
    }));
}
export function postApiV1CreditsonaccountreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/creditsonaccountreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1CreditsonaccountreportExportexcelxlsx(webApiModulesReportsDealReportsCreditsOnAccountReportCreditsOnAccountReportRequest?: WebApiModulesReportsDealReportsCreditsOnAccountReportCreditsOnAccountReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/creditsonaccountreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsCreditsOnAccountReportCreditsOnAccountReportRequest
    })));
}
export function postApiV1CreditsonaccountreportRunreport(webApiModulesReportsDealReportsCreditsOnAccountReportCreditsOnAccountReportRequest?: WebApiModulesReportsDealReportsCreditsOnAccountReportCreditsOnAccountReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/creditsonaccountreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsCreditsOnAccountReportCreditsOnAccountReportRequest
    })));
}
export function postApiV1CreditsonaccountreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/creditsonaccountreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CreditsonaccountreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/creditsonaccountreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CreditsonaccountreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/creditsonaccountreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1CreditsonaccountreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/creditsonaccountreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1CreditsonaccountreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/creditsonaccountreport/preview", {
        ...opts
    }));
}
export function postApiV1CrewsigninreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1CrewsigninreportExportexcelxlsx(webApiModulesReportsCrewReportsCrewSignInReportCrewSignInReportRequest?: WebApiModulesReportsCrewReportsCrewSignInReportCrewSignInReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsCrewReportsCrewSignInReportCrewSignInReportRequest
    })));
}
export function postApiV1CrewsigninreportRunreport(webApiModulesReportsCrewReportsCrewSignInReportCrewSignInReportRequest?: WebApiModulesReportsCrewReportsCrewSignInReportCrewSignInReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsCrewReportsCrewSignInReportCrewSignInReportRequest
    })));
}
export function postApiV1CrewsigninreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CrewsigninreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CrewsigninreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CrewsigninreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CrewsigninreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1CrewsigninreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1CrewsigninreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/crewsigninreport/preview", {
        ...opts
    }));
}
export function postApiV1CustomerrevenuebymonthreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1CustomerrevenuebymonthreportExportexcelxlsx(webApiModulesReportsDealReportsCustomerRevenueByMonthReportCustomerRevenueByMonthReportRequest?: WebApiModulesReportsDealReportsCustomerRevenueByMonthReportCustomerRevenueByMonthReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsCustomerRevenueByMonthReportCustomerRevenueByMonthReportRequest
    })));
}
export function postApiV1CustomerrevenuebymonthreportRunreport(webApiModulesReportsDealReportsCustomerRevenueByMonthReportCustomerRevenueByMonthReportRequest?: WebApiModulesReportsDealReportsCustomerRevenueByMonthReportCustomerRevenueByMonthReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsCustomerRevenueByMonthReportCustomerRevenueByMonthReportRequest
    })));
}
export function postApiV1CustomerrevenuebymonthreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebymonthreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebymonthreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebymonthreportValidatecustomertypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/validatecustomertype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebymonthreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebymonthreportValidatedealtypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/validatedealtype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebymonthreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1CustomerrevenuebymonthreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1CustomerrevenuebymonthreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebymonthreport/preview", {
        ...opts
    }));
}
export function postApiV1CustomerrevenuebytypereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1CustomerrevenuebytypereportExportexcelxlsx(webApiModulesReportsDealReportsCustomerRevenueByTypeReportCustomerRevenueByTypeReportRequest?: WebApiModulesReportsDealReportsCustomerRevenueByTypeReportCustomerRevenueByTypeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsCustomerRevenueByTypeReportCustomerRevenueByTypeReportRequest
    })));
}
export function postApiV1CustomerrevenuebytypereportRunreport(webApiModulesReportsDealReportsCustomerRevenueByTypeReportCustomerRevenueByTypeReportRequest?: WebApiModulesReportsDealReportsCustomerRevenueByTypeReportCustomerRevenueByTypeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsCustomerRevenueByTypeReportCustomerRevenueByTypeReportRequest
    })));
}
export function postApiV1CustomerrevenuebytypereportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebytypereportValidatecurrencyBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/validatecurrency/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebytypereportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebytypereportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebytypereportValidatedealtypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/validatedealtype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebytypereportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1CustomerrevenuebytypereportValidateordertypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/validateordertype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1CustomerrevenuebytypereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1CustomerrevenuebytypereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/customerrevenuebytypereport/preview", {
        ...opts
    }));
}
export function postApiV1DailyreceiptsreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dailyreceiptsreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1DailyreceiptsreportExportexcelxlsx(webApiModulesReportsAccountingReportsDailyReceiptsReportDailyReceiptsReportRequest?: WebApiModulesReportsAccountingReportsDailyReceiptsReportDailyReceiptsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dailyreceiptsreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsDailyReceiptsReportDailyReceiptsReportRequest
    })));
}
export function postApiV1DailyreceiptsreportRunreport(webApiModulesReportsAccountingReportsDailyReceiptsReportDailyReceiptsReportRequest?: WebApiModulesReportsAccountingReportsDailyReceiptsReportDailyReceiptsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dailyreceiptsreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsDailyReceiptsReportDailyReceiptsReportRequest
    })));
}
export function postApiV1DailyreceiptsreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dailyreceiptsreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DailyreceiptsreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dailyreceiptsreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DailyreceiptsreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dailyreceiptsreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DailyreceiptsreportValidatepaymenttypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dailyreceiptsreport/validatepaymenttype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1DailyreceiptsreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dailyreceiptsreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1DailyreceiptsreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dailyreceiptsreport/preview", {
        ...opts
    }));
}
export function postApiV1DealinvoicebatchreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicebatchreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1DealinvoicebatchreportExportexcelxlsx(webApiModulesReportsChargeProcessingReportsDealInvoiceBatchReportDealInvoiceBatchReportRequest?: WebApiModulesReportsChargeProcessingReportsDealInvoiceBatchReportDealInvoiceBatchReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicebatchreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsChargeProcessingReportsDealInvoiceBatchReportDealInvoiceBatchReportRequest
    })));
}
export function postApiV1DealinvoicebatchreportRunreport(webApiModulesReportsChargeProcessingReportsDealInvoiceBatchReportDealInvoiceBatchReportRequest?: WebApiModulesReportsChargeProcessingReportsDealInvoiceBatchReportDealInvoiceBatchReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicebatchreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsChargeProcessingReportsDealInvoiceBatchReportDealInvoiceBatchReportRequest
    })));
}
export function postApiV1DealinvoicebatchreportValidatebatchBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicebatchreport/validatebatch/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1DealinvoicebatchreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicebatchreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1DealinvoicebatchreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicebatchreport/preview", {
        ...opts
    }));
}
export function postApiV1DealinvoicedetailreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicedetailreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1DealinvoicedetailreportExportexcelxlsx(webApiModulesReportsDealReportsDealInvoiceDetailReportDealInvoiceDetailReportRequest?: WebApiModulesReportsDealReportsDealInvoiceDetailReportDealInvoiceDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicedetailreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsDealInvoiceDetailReportDealInvoiceDetailReportRequest
    })));
}
export function postApiV1DealinvoicedetailreportRunreport(webApiModulesReportsDealReportsDealInvoiceDetailReportDealInvoiceDetailReportRequest?: WebApiModulesReportsDealReportsDealInvoiceDetailReportDealInvoiceDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicedetailreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsDealInvoiceDetailReportDealInvoiceDetailReportRequest
    })));
}
export function postApiV1DealinvoicedetailreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicedetailreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealinvoicedetailreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicedetailreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealinvoicedetailreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicedetailreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealinvoicedetailreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicedetailreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1DealinvoicedetailreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicedetailreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1DealinvoicedetailreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealinvoicedetailreport/preview", {
        ...opts
    }));
}
export function postApiV1DealoutstandingitemsreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1DealoutstandingitemsreportExportexcelxlsx(webApiModulesReportsDealReportsDealOutstandingItemsReportDealOutstandingItemsReportRequest?: WebApiModulesReportsDealReportsDealOutstandingItemsReportDealOutstandingItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsDealOutstandingItemsReportDealOutstandingItemsReportRequest
    })));
}
export function postApiV1DealoutstandingitemsreportRunreport(webApiModulesReportsDealReportsDealOutstandingItemsReportDealOutstandingItemsReportRequest?: WebApiModulesReportsDealReportsDealOutstandingItemsReportDealOutstandingItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsDealOutstandingItemsReportDealOutstandingItemsReportRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidateordertypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validateordertype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1DealoutstandingitemsreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1DealoutstandingitemsreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1DealoutstandingitemsreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/dealoutstandingitemsreport/preview", {
        ...opts
    }));
}
export function postApiV1DepreciationgldetailreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/depreciationgldetailreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1DepreciationgldetailreportExportexcelxlsx(webApiModulesReportsAccountingReportsDepreciationGlDetailReportDepreciationGlDetailReportRequest?: WebApiModulesReportsAccountingReportsDepreciationGlDetailReportDepreciationGlDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/depreciationgldetailreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsDepreciationGlDetailReportDepreciationGlDetailReportRequest
    })));
}
export function postApiV1DepreciationgldetailreportRunreport(webApiModulesReportsAccountingReportsDepreciationGlDetailReportDepreciationGlDetailReportRequest?: WebApiModulesReportsAccountingReportsDepreciationGlDetailReportDepreciationGlDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/depreciationgldetailreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsDepreciationGlDetailReportDepreciationGlDetailReportRequest
    })));
}
export function postApiV1DepreciationgldetailreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/depreciationgldetailreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1DepreciationgldetailreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/depreciationgldetailreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1DepreciationgldetailreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/depreciationgldetailreport/preview", {
        ...opts
    }));
}
export function postApiV1ExchangecontractreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/exchangecontractreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ExchangecontractreportRunreport(webApiModulesReportsContractReportsExchangeContractReportExchangeContractReportRequest?: WebApiModulesReportsContractReportsExchangeContractReportExchangeContractReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/exchangecontractreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsExchangeContractReportExchangeContractReportRequest
    })));
}
export function postApiV1ExchangecontractreportValidatecontractBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/exchangecontractreport/validatecontract/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ExchangecontractreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/exchangecontractreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ExchangecontractreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/exchangecontractreport/preview", {
        ...opts
    }));
}
export function postApiV1FixedassetbookvaluereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1FixedassetbookvaluereportExportexcelxlsx(webApiModulesReportsFixedAssetBookValueFixedAssetBookValueRequest?: WebApiModulesReportsFixedAssetBookValueFixedAssetBookValueRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsFixedAssetBookValueFixedAssetBookValueRequest
    })));
}
export function postApiV1FixedassetbookvaluereportRunreport(webApiModulesReportsFixedAssetBookValueFixedAssetBookValueRequest?: WebApiModulesReportsFixedAssetBookValueFixedAssetBookValueRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsFixedAssetBookValueFixedAssetBookValueRequest
    })));
}
export function postApiV1FixedassetbookvaluereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1FixedassetbookvaluereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1FixedassetbookvaluereportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1FixedassetbookvaluereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1FixedassetbookvaluereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1FixedassetbookvaluereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1FixedassetbookvaluereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetbookvaluereport/preview", {
        ...opts
    }));
}
export function postApiV1FixedassetdepreciationreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1FixedassetdepreciationreportExportexcelxlsx(webApiModulesReportsFixedAssetDepreciationReportFixedAssetDepreciationReportRequest?: WebApiModulesReportsFixedAssetDepreciationReportFixedAssetDepreciationReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsFixedAssetDepreciationReportFixedAssetDepreciationReportRequest
    })));
}
export function postApiV1FixedassetdepreciationreportRunreport(webApiModulesReportsFixedAssetDepreciationReportFixedAssetDepreciationReportRequest?: WebApiModulesReportsFixedAssetDepreciationReportFixedAssetDepreciationReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsFixedAssetDepreciationReportFixedAssetDepreciationReportRequest
    })));
}
export function postApiV1FixedassetdepreciationreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1FixedassetdepreciationreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1FixedassetdepreciationreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1FixedassetdepreciationreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1FixedassetdepreciationreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1FixedassetdepreciationreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1FixedassetdepreciationreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/fixedassetdepreciationreport/preview", {
        ...opts
    }));
}
export function postApiV1GldistributionreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributionreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1GldistributionreportExportexcelxlsx(webApiModulesReportsAccountingReportsGlDistributionReportGlDistributionReportRequest?: WebApiModulesReportsAccountingReportsGlDistributionReportGlDistributionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributionreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsGlDistributionReportGlDistributionReportRequest
    })));
}
export function postApiV1GldistributionreportRunreport(webApiModulesReportsAccountingReportsGlDistributionReportGlDistributionReportRequest?: WebApiModulesReportsAccountingReportsGlDistributionReportGlDistributionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributionreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsGlDistributionReportGlDistributionReportRequest
    })));
}
export function postApiV1GldistributionreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributionreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1GldistributionreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributionreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1GldistributionreportValidateglaccountBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributionreport/validateglaccount/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1GldistributionreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributionreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1GldistributionreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributionreport/preview", {
        ...opts
    }));
}
export function postApiV1GldistributiontypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributiontype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1GldistributiontypeExportexcelxlsx(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/gldistributiontype/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InactiveeligiblereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inactiveeligiblereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1InactiveeligiblereportExportexcelxlsx(webApiModulesReportsWarehouseReportsInactiveEligibleReportInactiveEligibleReportRequest?: WebApiModulesReportsWarehouseReportsInactiveEligibleReportInactiveEligibleReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inactiveeligiblereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsInactiveEligibleReportInactiveEligibleReportRequest
    })));
}
export function postApiV1InactiveeligiblereportRunreport(webApiModulesReportsWarehouseReportsInactiveEligibleReportInactiveEligibleReportRequest?: WebApiModulesReportsWarehouseReportsInactiveEligibleReportInactiveEligibleReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inactiveeligiblereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsInactiveEligibleReportInactiveEligibleReportRequest
    })));
}
export function postApiV1InactiveeligiblereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inactiveeligiblereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InactiveeligiblereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inactiveeligiblereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InactiveeligiblereportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inactiveeligiblereport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1InactiveeligiblereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inactiveeligiblereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1InactiveeligiblereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inactiveeligiblereport/preview", {
        ...opts
    }));
}
export function postApiV1IncomegldetailreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomegldetailreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1IncomegldetailreportExportexcelxlsx(webApiModulesReportsIncomeGlDetailReportIncomeGlDetailReportRequest?: WebApiModulesReportsIncomeGlDetailReportIncomeGlDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomegldetailreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsIncomeGlDetailReportIncomeGlDetailReportRequest
    })));
}
export function postApiV1IncomegldetailreportRunreport(webApiModulesReportsIncomeGlDetailReportIncomeGlDetailReportRequest?: WebApiModulesReportsIncomeGlDetailReportIncomeGlDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomegldetailreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsIncomeGlDetailReportIncomeGlDetailReportRequest
    })));
}
export function postApiV1IncomegldetailreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomegldetailreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1IncomegldetailreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomegldetailreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1IncomegldetailreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomegldetailreport/preview", {
        ...opts
    }));
}
export function postApiV1IncomingdeliveryinstructionsRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingdeliveryinstructions/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1IncomingdeliveryinstructionsRunreport(webApiModulesReportsIncomingDeliveryInstructionsIncomingDeliveryInstructionsRequest?: WebApiModulesReportsIncomingDeliveryInstructionsIncomingDeliveryInstructionsRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingdeliveryinstructions/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsIncomingDeliveryInstructionsIncomingDeliveryInstructionsRequest
    })));
}
export function getApiV1IncomingdeliveryinstructionsEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingdeliveryinstructions/emptyobject", {
        ...opts
    }));
}
export function getApiV1IncomingdeliveryinstructionsPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingdeliveryinstructions/preview", {
        ...opts
    }));
}
export function postApiV1IncomingshippinglabelRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingshippinglabel/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1IncomingshippinglabelRunreport(webApiModulesReportsOrderReportsIncomingShippingLabelIncomingShippingLabelRequest?: WebApiModulesReportsOrderReportsIncomingShippingLabelIncomingShippingLabelRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingshippinglabel/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsIncomingShippingLabelIncomingShippingLabelRequest
    })));
}
export function postApiV1IncomingshippinglabelValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingshippinglabel/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1IncomingshippinglabelIncomingshippinglabelBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingshippinglabel/incomingshippinglabel/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1IncomingshippinglabelEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingshippinglabel/emptyobject", {
        ...opts
    }));
}
export function getApiV1IncomingshippinglabelPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incomingshippinglabel/preview", {
        ...opts
    }));
}
export function postApiV1IncontractreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incontractreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1IncontractreportRunreport(webApiModulesReportsContractReportsInContractReportInContractReportRequest?: WebApiModulesReportsContractReportsInContractReportInContractReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incontractreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsInContractReportInContractReportRequest
    })));
}
export function postApiV1IncontractreportValidatecontractBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incontractreport/validatecontract/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1IncontractreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incontractreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1IncontractreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/incontractreport/preview", {
        ...opts
    }));
}
export function postApiV1InventorybylocationreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1InventorybylocationreportExportexcelxlsx(webApiModulesReportsPropsWardrobeReportsInventoryByLocationReportInventoryByLocationReportRequest?: WebApiModulesReportsPropsWardrobeReportsInventoryByLocationReportInventoryByLocationReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsInventoryByLocationReportInventoryByLocationReportRequest
    })));
}
export function postApiV1InventorybylocationreportRunreport(webApiModulesReportsPropsWardrobeReportsInventoryByLocationReportInventoryByLocationReportRequest?: WebApiModulesReportsPropsWardrobeReportsInventoryByLocationReportInventoryByLocationReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsInventoryByLocationReportInventoryByLocationReportRequest
    })));
}
export function postApiV1InventorybylocationreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorybylocationreportValidatecompanydepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/validatecompanydepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorybylocationreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorybylocationreportValidateinventorystatusBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/validateinventorystatus/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorybylocationreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorybylocationreportValidateoriginalshowBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/validateoriginalshow/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorybylocationreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorybylocationreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1InventorybylocationreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1InventorybylocationreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorybylocationreport/preview", {
        ...opts
    }));
}
export function postApiV1InventorychangetransactiontypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorychangetransactiontype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorychangetransactiontypeExportexcelxlsx(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorychangetransactiontype/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportExportexcelxlsx(webApiModulesReportsPropsWardrobeReportsInventoryReceiptDetailsReportInventoryReceiptDetailsReportRequest?: WebApiModulesReportsPropsWardrobeReportsInventoryReceiptDetailsReportInventoryReceiptDetailsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsInventoryReceiptDetailsReportInventoryReceiptDetailsReportRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportRunreport(webApiModulesReportsPropsWardrobeReportsInventoryReceiptDetailsReportInventoryReceiptDetailsReportRequest?: WebApiModulesReportsPropsWardrobeReportsInventoryReceiptDetailsReportInventoryReceiptDetailsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsInventoryReceiptDetailsReportInventoryReceiptDetailsReportRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidatebuyerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validatebuyer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidatecompanydepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validatecompanydepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidateoriginalshowBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validateoriginalshow/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidatereceiptBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validatereceipt/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptdetailsreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1InventoryreceiptdetailsreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1InventoryreceiptdetailsreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptdetailsreport/preview", {
        ...opts
    }));
}
export function postApiV1InventoryreceiptsummaryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1InventoryreceiptsummaryreportExportexcelxlsx(webApiModulesReportsPropsWardrobeReportsInventoryReceiptSummaryReportInventoryReceiptSummaryReportRequest?: WebApiModulesReportsPropsWardrobeReportsInventoryReceiptSummaryReportInventoryReceiptSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsInventoryReceiptSummaryReportInventoryReceiptSummaryReportRequest
    })));
}
export function postApiV1InventoryreceiptsummaryreportRunreport(webApiModulesReportsPropsWardrobeReportsInventoryReceiptSummaryReportInventoryReceiptSummaryReportRequest?: WebApiModulesReportsPropsWardrobeReportsInventoryReceiptSummaryReportInventoryReceiptSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsInventoryReceiptSummaryReportInventoryReceiptSummaryReportRequest
    })));
}
export function postApiV1InventoryreceiptsummaryreportValidatebuyerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/validatebuyer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptsummaryreportValidatecompanydepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/validatecompanydepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptsummaryreportValidateoriginalshowBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/validateoriginalshow/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptsummaryreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventoryreceiptsummaryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1InventoryreceiptsummaryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1InventoryreceiptsummaryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventoryreceiptsummaryreport/preview", {
        ...opts
    }));
}
export function postApiV1InventorystatusbyorderreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1InventorystatusbyorderreportExportexcelxlsx(webApiModulesReportsOrderReportsInventoryStatusByOrderReportInventoryStatusByOrderReportRequest?: WebApiModulesReportsOrderReportsInventoryStatusByOrderReportInventoryStatusByOrderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsInventoryStatusByOrderReportInventoryStatusByOrderReportRequest
    })));
}
export function postApiV1InventorystatusbyorderreportRunreport(webApiModulesReportsOrderReportsInventoryStatusByOrderReportInventoryStatusByOrderReportRequest?: WebApiModulesReportsOrderReportsInventoryStatusByOrderReportInventoryStatusByOrderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsInventoryStatusByOrderReportInventoryStatusByOrderReportRequest
    })));
}
export function postApiV1InventorystatusbyorderreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbyorderreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbyorderreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbyorderreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbyorderreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbyorderreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbyorderreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbyorderreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1InventorystatusbyorderreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1InventorystatusbyorderreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbyorderreport/preview", {
        ...opts
    }));
}
export function postApiV1InventorystatusbypurchaseorderreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportExportexcelxlsx(webApiModulesReportsVendorReportsInventoryStatusByPurchaseOrderReportInventoryStatusByPurchaseOrderReportRequest?: WebApiModulesReportsVendorReportsInventoryStatusByPurchaseOrderReportInventoryStatusByPurchaseOrderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsInventoryStatusByPurchaseOrderReportInventoryStatusByPurchaseOrderReportRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportRunreport(webApiModulesReportsVendorReportsInventoryStatusByPurchaseOrderReportInventoryStatusByPurchaseOrderReportRequest?: WebApiModulesReportsVendorReportsInventoryStatusByPurchaseOrderReportInventoryStatusByPurchaseOrderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsInventoryStatusByPurchaseOrderReportInventoryStatusByPurchaseOrderReportRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportValidatepotypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/validatepotype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InventorystatusbypurchaseorderreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1InventorystatusbypurchaseorderreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1InventorystatusbypurchaseorderreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/inventorystatusbypurchaseorderreport/preview", {
        ...opts
    }));
}
export function postApiV1InvoicediscountreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1InvoicediscountreportExportexcelxlsx(webApiModulesReportsBillingInvoiceDiscountReportInvoiceDiscountReportRequest?: WebApiModulesReportsBillingInvoiceDiscountReportInvoiceDiscountReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingInvoiceDiscountReportInvoiceDiscountReportRequest
    })));
}
export function postApiV1InvoicediscountreportRunreport(webApiModulesReportsBillingInvoiceDiscountReportInvoiceDiscountReportRequest?: WebApiModulesReportsBillingInvoiceDiscountReportInvoiceDiscountReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingInvoiceDiscountReportInvoiceDiscountReportRequest
    })));
}
export function postApiV1InvoicediscountreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InvoicediscountreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InvoicediscountreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InvoicediscountreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InvoicediscountreportValidatediscountreasonBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/validatediscountreason/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1InvoicediscountreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1InvoicediscountreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicediscountreport/preview", {
        ...opts
    }));
}
export function postApiV1InvoicereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1InvoicereportRunreport(webApiModulesReportsBillingInvoiceReportInvoiceReportRequest?: WebApiModulesReportsBillingInvoiceReportInvoiceReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingInvoiceReportInvoiceReportRequest
    })));
}
export function postApiV1InvoicereportValidateinvoiceBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicereport/validateinvoice/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1InvoicereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1InvoicereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicereport/preview", {
        ...opts
    }));
}
export function postApiV1InvoicesummaryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicesummaryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1InvoicesummaryreportExportexcelxlsx(webApiModulesReportsBillingInvoiceSummaryReportInvoiceSummaryReportRequest?: WebApiModulesReportsBillingInvoiceSummaryReportInvoiceSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicesummaryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingInvoiceSummaryReportInvoiceSummaryReportRequest
    })));
}
export function postApiV1InvoicesummaryreportRunreport(webApiModulesReportsBillingInvoiceSummaryReportInvoiceSummaryReportRequest?: WebApiModulesReportsBillingInvoiceSummaryReportInvoiceSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicesummaryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingInvoiceSummaryReportInvoiceSummaryReportRequest
    })));
}
export function postApiV1InvoicesummaryreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicesummaryreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InvoicesummaryreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicesummaryreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InvoicesummaryreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicesummaryreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1InvoicesummaryreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicesummaryreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1InvoicesummaryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicesummaryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1InvoicesummaryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/invoicesummaryreport/preview", {
        ...opts
    }));
}
export function postApiV1ItemspurchasedbydealreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportExportexcelxlsx(webApiModulesReportsPropsWardrobeReportsItemsPurchasedByDealReportItemsPurchasedByDealReportRequest?: WebApiModulesReportsPropsWardrobeReportsItemsPurchasedByDealReportItemsPurchasedByDealReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsItemsPurchasedByDealReportItemsPurchasedByDealReportRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportRunreport(webApiModulesReportsPropsWardrobeReportsItemsPurchasedByDealReportItemsPurchasedByDealReportRequest?: WebApiModulesReportsPropsWardrobeReportsItemsPurchasedByDealReportItemsPurchasedByDealReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPropsWardrobeReportsItemsPurchasedByDealReportItemsPurchasedByDealReportRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportValidatecompanydepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/validatecompanydepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportValidateinventorystatusBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/validateinventorystatus/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportValidateoriginalshowBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/validateoriginalshow/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ItemspurchasedbydealreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ItemspurchasedbydealreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ItemspurchasedbydealreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/itemspurchasedbydealreport/preview", {
        ...opts
    }));
}
export function getJspm({ timestamp }: {
    timestamp?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>(`/jspm${QS.query(QS.explode({
        timestamp
    }))}`, {
        ...opts
    }));
}
export function postApiV1LatereturnsreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1LatereturnsreportExportexcelxlsx(webApiModulesReportsOrderReportsLateReturnsReportLateReturnsReportRequest?: WebApiModulesReportsOrderReportsLateReturnsReportLateReturnsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsLateReturnsReportLateReturnsReportRequest
    })));
}
export function postApiV1LatereturnsreportRunreport(webApiModulesReportsOrderReportsLateReturnsReportLateReturnsReportRequest?: WebApiModulesReportsOrderReportsLateReturnsReportLateReturnsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsLateReturnsReportLateReturnsReportRequest
    })));
}
export function postApiV1LatereturnsreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1LatereturnsreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1LatereturnsreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1LatereturnsreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1LatereturnsreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1LatereturnsreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1LatereturnsreportValidatecontactBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/validatecontact/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1LatereturnsreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1LatereturnsreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1LatereturnsreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1LatereturnsreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/latereturnsreport/preview", {
        ...opts
    }));
}
export function postApiV1LostcontractreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/lostcontractreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1LostcontractreportRunreport(webApiModulesReportsContractReportsLostContractReportLostContractReportRequest?: WebApiModulesReportsContractReportsLostContractReportLostContractReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/lostcontractreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsLostContractReportLostContractReportRequest
    })));
}
export function postApiV1LostcontractreportValidatecontractBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/lostcontractreport/validatecontract/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1LostcontractreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/lostcontractreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1LostcontractreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/lostcontractreport/preview", {
        ...opts
    }));
}
export function postApiV1OrderchangereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderchangereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OrderchangereportExportexcelxlsx(webApiModulesReportsOrderChangeReportOrderChangeReportRequest?: WebApiModulesReportsOrderChangeReportOrderChangeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderchangereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderChangeReportOrderChangeReportRequest
    })));
}
export function getApiV1OrderchangereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderchangereport/emptyobject", {
        ...opts
    }));
}
export function postApiV1OrderchangereportRunreport(webApiModulesReportsOrderChangeReportOrderChangeReportRequest?: WebApiModulesReportsOrderChangeReportOrderChangeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderchangereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderChangeReportOrderChangeReportRequest
    })));
}
export function getApiV1OrderchangereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderchangereport/preview", {
        ...opts
    }));
}
export function postApiV1OrderconflictreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OrderconflictreportExportexcelxlsx(webApiModulesReportsOrderReportsOrderConflictReportOrderConflictReportRequest?: WebApiModulesReportsOrderReportsOrderConflictReportOrderConflictReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOrderConflictReportOrderConflictReportRequest
    })));
}
export function postApiV1OrderconflictreportRunreport(webApiModulesReportsOrderReportsOrderConflictReportOrderConflictReportRequest?: WebApiModulesReportsOrderReportsOrderConflictReportOrderConflictReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOrderConflictReportOrderConflictReportRequest
    })));
}
export function postApiV1OrderconflictreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderconflictreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderconflictreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderconflictreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderconflictreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderconflictreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderconflictreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderconflictreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OrderconflictreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OrderconflictreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderconflictreport/preview", {
        ...opts
    }));
}
export function postApiV1OrderdatesandbannersreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OrderdatesandbannersreportExportexcelxlsx(webApiModulesReportsOrderReportsOrderDatesAndBannersReportOrderDatesAndBannersReportRequest?: WebApiModulesReportsOrderReportsOrderDatesAndBannersReportOrderDatesAndBannersReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOrderDatesAndBannersReportOrderDatesAndBannersReportRequest
    })));
}
export function postApiV1OrderdatesandbannersreportRunreport(webApiModulesReportsOrderReportsOrderDatesAndBannersReportOrderDatesAndBannersReportRequest?: WebApiModulesReportsOrderReportsOrderDatesAndBannersReportOrderDatesAndBannersReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOrderDatesAndBannersReportOrderDatesAndBannersReportRequest
    })));
}
export function postApiV1OrderdatesandbannersreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderdatesandbannersreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderdatesandbannersreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderdatesandbannersreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrderdatesandbannersreportValidateordertypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/validateordertype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OrderdatesandbannersreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OrderdatesandbannersreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderdatesandbannersreport/preview", {
        ...opts
    }));
}
export function postApiV1OrderreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OrderreportRunreport(webApiModulesReportsOrderReportsOrderReportOrderReportRequest?: WebApiModulesReportsOrderReportsOrderReportOrderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOrderReportOrderReportRequest
    })));
}
export function postApiV1OrderreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OrderreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OrderreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderreport/preview", {
        ...opts
    }));
}
export function postApiV1OrdersbydealreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OrdersbydealreportExportexcelxlsx(webApiModulesReportsDealReportsOrdersByDealReportOrdersByDealReportRequest?: WebApiModulesReportsDealReportsOrdersByDealReportOrdersByDealReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsOrdersByDealReportOrdersByDealReportRequest
    })));
}
export function postApiV1OrdersbydealreportRunreport(webApiModulesReportsDealReportsOrdersByDealReportOrdersByDealReportRequest?: WebApiModulesReportsDealReportsOrdersByDealReportOrdersByDealReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsOrdersByDealReportOrdersByDealReportRequest
    })));
}
export function postApiV1OrdersbydealreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrdersbydealreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrdersbydealreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrdersbydealreportValidatedealtypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/validatedealtype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrdersbydealreportValidatedealstatusBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/validatedealstatus/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrdersbydealreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OrdersbydealreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OrdersbydealreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordersbydealreport/preview", {
        ...opts
    }));
}
export function postApiV1OrderstatusdetailreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatusdetailreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OrderstatusdetailreportRunreport(webApiModulesReportsOrderReportsOrderStatusDetailReportOrderStatusDetailReportRequest?: WebApiModulesReportsOrderReportsOrderStatusDetailReportOrderStatusDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatusdetailreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOrderStatusDetailReportOrderStatusDetailReportRequest
    })));
}
export function postApiV1OrderstatusdetailreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatusdetailreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OrderstatusdetailreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatusdetailreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OrderstatusdetailreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatusdetailreport/preview", {
        ...opts
    }));
}
export function postApiV1OrderstatussummaryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatussummaryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OrderstatussummaryreportRunreport(webApiModulesReportsOrderReportsOrderStatusSummaryReportOrderStatusSummaryReportRequest?: WebApiModulesReportsOrderReportsOrderStatusSummaryReportOrderStatusSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatussummaryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOrderStatusSummaryReportOrderStatusSummaryReportRequest
    })));
}
export function postApiV1OrderstatussummaryreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatussummaryreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OrderstatussummaryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatussummaryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OrderstatussummaryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/orderstatussummaryreport/preview", {
        ...opts
    }));
}
export function postApiV1OrdervaluesheetreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordervaluesheetreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OrdervaluesheetreportRunreport(webApiModulesReportsOrderValueSheetReportOrderValueSheetReportRequest?: WebApiModulesReportsOrderValueSheetReportOrderValueSheetReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordervaluesheetreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderValueSheetReportOrderValueSheetReportRequest
    })));
}
export function postApiV1OrdervaluesheetreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordervaluesheetreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OrdervaluesheetreportValidatecontractBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordervaluesheetreport/validatecontract/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OrdervaluesheetreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordervaluesheetreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OrdervaluesheetreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/ordervaluesheetreport/preview", {
        ...opts
    }));
}
export function postApiV1OutcontractreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outcontractreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OutcontractreportRunreport(webApiModulesReportsContractReportsOutContractReportOutContractReportRequest?: WebApiModulesReportsContractReportsOutContractReportOutContractReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outcontractreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsOutContractReportOutContractReportRequest
    })));
}
export function postApiV1OutcontractreportValidatecontractBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outcontractreport/validatecontract/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OutcontractreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outcontractreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OutcontractreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outcontractreport/preview", {
        ...opts
    }));
}
export function postApiV1OutgoingdeliveryinstructionsRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingdeliveryinstructions/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OutgoingdeliveryinstructionsRunreport(webApiModulesReportsOutgoingDeliveryInstructionsOutgoingDeliveryInstructionsRequest?: WebApiModulesReportsOutgoingDeliveryInstructionsOutgoingDeliveryInstructionsRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingdeliveryinstructions/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOutgoingDeliveryInstructionsOutgoingDeliveryInstructionsRequest
    })));
}
export function getApiV1OutgoingdeliveryinstructionsEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingdeliveryinstructions/emptyobject", {
        ...opts
    }));
}
export function getApiV1OutgoingdeliveryinstructionsPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingdeliveryinstructions/preview", {
        ...opts
    }));
}
export function postApiV1OutgoingshippinglabelRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingshippinglabel/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OutgoingshippinglabelRunreport(webApiModulesReportsOrderReportsOutgoingShippingLabelOutgoingShippingLabelRequest?: WebApiModulesReportsOrderReportsOutgoingShippingLabelOutgoingShippingLabelRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingshippinglabel/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOutgoingShippingLabelOutgoingShippingLabelRequest
    })));
}
export function postApiV1OutgoingshippinglabelValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingshippinglabel/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutgoingshippinglabelValidateshippingcaseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingshippinglabel/validateshippingcase/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OutgoingshippinglabelEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingshippinglabel/emptyobject", {
        ...opts
    }));
}
export function getApiV1OutgoingshippinglabelPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outgoingshippinglabel/preview", {
        ...opts
    }));
}
export function postApiV1OutstandingpurchasereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OutstandingpurchasereportExportexcelxlsx(webApiModulesReportsVendorReportsOutstandingPurchaseReportOutstandingPurchaseReportRequest?: WebApiModulesReportsVendorReportsOutstandingPurchaseReportOutstandingPurchaseReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsOutstandingPurchaseReportOutstandingPurchaseReportRequest
    })));
}
export function postApiV1OutstandingpurchasereportRunreport(webApiModulesReportsVendorReportsOutstandingPurchaseReportOutstandingPurchaseReportRequest?: WebApiModulesReportsVendorReportsOutstandingPurchaseReportOutstandingPurchaseReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsOutstandingPurchaseReportOutstandingPurchaseReportRequest
    })));
}
export function postApiV1OutstandingpurchasereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingpurchasereportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingpurchasereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingpurchasereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingpurchasereportValidatepotypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/validatepotype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingpurchasereportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OutstandingpurchasereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OutstandingpurchasereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingpurchasereport/preview", {
        ...opts
    }));
}
export function postApiV1OutstandingsubrentalreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1OutstandingsubrentalreportExportexcelxlsx(webApiModulesReportsOrderReportsOutstandingSubRentalReportOutstandingSubRentalReportRequest?: WebApiModulesReportsOrderReportsOutstandingSubRentalReportOutstandingSubRentalReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOutstandingSubRentalReportOutstandingSubRentalReportRequest
    })));
}
export function postApiV1OutstandingsubrentalreportRunreport(webApiModulesReportsOrderReportsOutstandingSubRentalReportOutstandingSubRentalReportRequest?: WebApiModulesReportsOrderReportsOutstandingSubRentalReportOutstandingSubRentalReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsOutstandingSubRentalReportOutstandingSubRentalReportRequest
    })));
}
export function postApiV1OutstandingsubrentalreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingsubrentalreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingsubrentalreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingsubrentalreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingsubrentalreportValidatedealtypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/validatedealtype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingsubrentalreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingsubrentalreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1OutstandingsubrentalreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1OutstandingsubrentalreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1OutstandingsubrentalreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/outstandingsubrentalreport/preview", {
        ...opts
    }));
}
export function postApiV1PartsinventoryattributesreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PartsinventoryattributesreportExportexcelxlsx(webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest?: WebApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest
    })));
}
export function postApiV1PartsinventoryattributesreportRunreport(webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest?: WebApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest
    })));
}
export function postApiV1PartsinventoryattributesreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventoryattributesreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventoryattributesreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventoryattributesreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventoryattributesreportValidateattributeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/validateattribute/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PartsinventoryattributesreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PartsinventoryattributesreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryattributesreport/preview", {
        ...opts
    }));
}
export function postApiV1PartsinventorycatalogreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PartsinventorycatalogreportExportexcelxlsx(webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest?: WebApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest
    })));
}
export function postApiV1PartsinventorycatalogreportRunreport(webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest?: WebApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest
    })));
}
export function postApiV1PartsinventorycatalogreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorycatalogreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorycatalogreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorycatalogreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorycatalogreportValidatewarehousecatalogBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/validatewarehousecatalog/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorycatalogreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PartsinventorycatalogreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PartsinventorycatalogreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorycatalogreport/preview", {
        ...opts
    }));
}
export function postApiV1PartsinventorychangereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PartsinventorychangereportExportexcelxlsx(webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest?: WebApiModulesReportsInventoryChangeReportInventoryChangeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest
    })));
}
export function postApiV1PartsinventorychangereportRunreport(webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest?: WebApiModulesReportsInventoryChangeReportInventoryChangeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest
    })));
}
export function postApiV1PartsinventorychangereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorychangereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorychangereportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorychangereportValidatetransactiontypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/validatetransactiontype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorychangereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorychangereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PartsinventorychangereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PartsinventorychangereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorychangereport/preview", {
        ...opts
    }));
}
export function postApiV1PartsinventorypurchasehistoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PartsinventorypurchasehistoryreportExportexcelxlsx(webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest?: WebApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest
    })));
}
export function postApiV1PartsinventorypurchasehistoryreportRunreport(webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest?: WebApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest
    })));
}
export function postApiV1PartsinventorypurchasehistoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorypurchasehistoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorypurchasehistoryreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorypurchasehistoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorypurchasehistoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorypurchasehistoryreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PartsinventorypurchasehistoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PartsinventorypurchasehistoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorypurchasehistoryreport/preview", {
        ...opts
    }));
}
export function postApiV1PartsinventoryreorderreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PartsinventoryreorderreportExportexcelxlsx(webApiModulesReportsPartsInventoryReportsPartsInventoryReorderReportPartsInventoryReorderReportRequest?: WebApiModulesReportsPartsInventoryReportsPartsInventoryReorderReportPartsInventoryReorderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPartsInventoryReportsPartsInventoryReorderReportPartsInventoryReorderReportRequest
    })));
}
export function postApiV1PartsinventoryreorderreportRunreport(webApiModulesReportsPartsInventoryReportsPartsInventoryReorderReportPartsInventoryReorderReportRequest?: WebApiModulesReportsPartsInventoryReportsPartsInventoryReorderReportPartsInventoryReorderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPartsInventoryReportsPartsInventoryReorderReportPartsInventoryReorderReportRequest
    })));
}
export function postApiV1PartsinventoryreorderreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventoryreorderreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventoryreorderreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventoryreorderreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventoryreorderreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PartsinventoryreorderreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PartsinventoryreorderreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventoryreorderreport/preview", {
        ...opts
    }));
}
export function postApiV1PartsinventorytransactionreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PartsinventorytransactionreportExportexcelxlsx(webApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest?: WebApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest
    })));
}
export function postApiV1PartsinventorytransactionreportRunreport(webApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest?: WebApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest
    })));
}
export function postApiV1PartsinventorytransactionreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorytransactionreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorytransactionreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorytransactionreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PartsinventorytransactionreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PartsinventorytransactionreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PartsinventorytransactionreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/partsinventorytransactionreport/preview", {
        ...opts
    }));
}
export function postApiV1PhysicalinventorycountsheetreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportExportexcelxlsx(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryCountSheetReportPhysicalInventoryCountSheetReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryCountSheetReportPhysicalInventoryCountSheetReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryCountSheetReportPhysicalInventoryCountSheetReportRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportRunreport(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryCountSheetReportPhysicalInventoryCountSheetReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryCountSheetReportPhysicalInventoryCountSheetReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryCountSheetReportPhysicalInventoryCountSheetReportRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportValidatecontactBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/validatecontact/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorycountsheetreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PhysicalinventorycountsheetreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PhysicalinventorycountsheetreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorycountsheetreport/preview", {
        ...opts
    }));
}
export function postApiV1PhysicalinventorydiscrepancyreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PhysicalinventorydiscrepancyreportExportexcelxlsx(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryDiscrepancyReportPhysicalInventoryDiscrepancyReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryDiscrepancyReportPhysicalInventoryDiscrepancyReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryDiscrepancyReportPhysicalInventoryDiscrepancyReportRequest
    })));
}
export function postApiV1PhysicalinventorydiscrepancyreportRunreport(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryDiscrepancyReportPhysicalInventoryDiscrepancyReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryDiscrepancyReportPhysicalInventoryDiscrepancyReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryDiscrepancyReportPhysicalInventoryDiscrepancyReportRequest
    })));
}
export function postApiV1PhysicalinventorydiscrepancyreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorydiscrepancyreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorydiscrepancyreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorydiscrepancyreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorydiscrepancyreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorydiscrepancyreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventorydiscrepancyreportValidatecontactBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/validatecontact/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PhysicalinventorydiscrepancyreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PhysicalinventorydiscrepancyreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventorydiscrepancyreport/preview", {
        ...opts
    }));
}
export function postApiV1PhysicalinventoryexceptionreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PhysicalinventoryexceptionreportExportexcelxlsx(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryExceptionReportPhysicalInventoryExceptionReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryExceptionReportPhysicalInventoryExceptionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryExceptionReportPhysicalInventoryExceptionReportRequest
    })));
}
export function postApiV1PhysicalinventoryexceptionreportRunreport(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryExceptionReportPhysicalInventoryExceptionReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryExceptionReportPhysicalInventoryExceptionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryExceptionReportPhysicalInventoryExceptionReportRequest
    })));
}
export function postApiV1PhysicalinventoryexceptionreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryexceptionreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryexceptionreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryexceptionreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryexceptionreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryexceptionreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryexceptionreportValidatecontactBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/validatecontact/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PhysicalinventoryexceptionreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PhysicalinventoryexceptionreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryexceptionreport/preview", {
        ...opts
    }));
}
export function postApiV1PhysicalinventoryprescanprogressreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportExportexcelxlsx(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryPrescanProgressReportPhysicalInventoryPrescanProgressReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryPrescanProgressReportPhysicalInventoryPrescanProgressReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryPrescanProgressReportPhysicalInventoryPrescanProgressReportRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportRunreport(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryPrescanProgressReportPhysicalInventoryPrescanProgressReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryPrescanProgressReportPhysicalInventoryPrescanProgressReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryPrescanProgressReportPhysicalInventoryPrescanProgressReportRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportValidatecontactBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/validatecontact/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryprescanprogressreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PhysicalinventoryprescanprogressreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PhysicalinventoryprescanprogressreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryprescanprogressreport/preview", {
        ...opts
    }));
}
export function postApiV1PhysicalinventoryreconciliationreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryreconciliationreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PhysicalinventoryreconciliationreportExportexcelxlsx(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryReconciliationReportPhysicalInventoryReconciliationReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryReconciliationReportPhysicalInventoryReconciliationReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryreconciliationreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryReconciliationReportPhysicalInventoryReconciliationReportRequest
    })));
}
export function postApiV1PhysicalinventoryreconciliationreportRunreport(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryReconciliationReportPhysicalInventoryReconciliationReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryReconciliationReportPhysicalInventoryReconciliationReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryreconciliationreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryReconciliationReportPhysicalInventoryReconciliationReportRequest
    })));
}
export function postApiV1PhysicalinventoryreconciliationreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryreconciliationreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryreconciliationreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryreconciliationreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryreconciliationreportValidatecontactBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryreconciliationreport/validatecontact/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PhysicalinventoryreconciliationreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryreconciliationreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PhysicalinventoryreconciliationreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryreconciliationreport/preview", {
        ...opts
    }));
}
export function postApiV1PhysicalinventoryrecountanalysisreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PhysicalinventoryrecountanalysisreportExportexcelxlsx(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryRecountAnalysisReportPhysicalInventoryRecountAnalysisReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryRecountAnalysisReportPhysicalInventoryRecountAnalysisReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryRecountAnalysisReportPhysicalInventoryRecountAnalysisReportRequest
    })));
}
export function postApiV1PhysicalinventoryrecountanalysisreportRunreport(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryRecountAnalysisReportPhysicalInventoryRecountAnalysisReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryRecountAnalysisReportPhysicalInventoryRecountAnalysisReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryRecountAnalysisReportPhysicalInventoryRecountAnalysisReportRequest
    })));
}
export function postApiV1PhysicalinventoryrecountanalysisreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryrecountanalysisreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryrecountanalysisreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryrecountanalysisreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryrecountanalysisreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryrecountanalysisreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryrecountanalysisreportValidatecontactBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/validatecontact/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PhysicalinventoryrecountanalysisreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PhysicalinventoryrecountanalysisreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryrecountanalysisreport/preview", {
        ...opts
    }));
}
export function postApiV1PhysicalinventoryresultsreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryresultsreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PhysicalinventoryresultsreportExportexcelxlsx(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryResultsReportPhysicalInventoryResultsReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryResultsReportPhysicalInventoryResultsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryresultsreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryResultsReportPhysicalInventoryResultsReportRequest
    })));
}
export function postApiV1PhysicalinventoryresultsreportRunreport(webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryResultsReportPhysicalInventoryResultsReportRequest?: WebApiModulesReportsPhysicalInventoryReportsPhysicalInventoryResultsReportPhysicalInventoryResultsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryresultsreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPhysicalInventoryReportsPhysicalInventoryResultsReportPhysicalInventoryResultsReportRequest
    })));
}
export function postApiV1PhysicalinventoryresultsreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryresultsreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PhysicalinventoryresultsreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryresultsreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PhysicalinventoryresultsreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryresultsreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PhysicalinventoryresultsreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/physicalinventoryresultsreport/preview", {
        ...opts
    }));
}
export function postApiV1PicklistreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/picklistreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PicklistreportRunreport(webApiModulesReportsOrderReportsPickListReportPickListReportRequest?: WebApiModulesReportsOrderReportsPickListReportPickListReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/picklistreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsPickListReportPickListReportRequest
    })));
}
export function postApiV1PicklistreportValidatepicklistBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/picklistreport/validatepicklist/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PicklistreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/picklistreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PicklistreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/picklistreport/preview", {
        ...opts
    }));
}
export function postApiV1ProfitlossreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ProfitlossreportExportexcelxlsx(webApiModulesReportsBillingProfitLossReportProfitLossReportRequest?: WebApiModulesReportsBillingProfitLossReportProfitLossReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingProfitLossReportProfitLossReportRequest
    })));
}
export function postApiV1ProfitlossreportRunreport(webApiModulesReportsBillingProfitLossReportProfitLossReportRequest?: WebApiModulesReportsBillingProfitLossReportProfitLossReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingProfitLossReportProfitLossReportRequest
    })));
}
export function postApiV1ProfitlossreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ProfitlossreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ProfitlossreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ProfitlossreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ProfitlossreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ProfitlossreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ProfitlossreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ProfitlossreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/profitlossreport/preview", {
        ...opts
    }));
}
export function postApiV1ProjectmanagerbillingreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ProjectmanagerbillingreportExportexcelxlsx(webApiModulesReportsBillingProjectManagerBillingReportProjectManagerBillingReportRequest?: WebApiModulesReportsBillingProjectManagerBillingReportProjectManagerBillingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingProjectManagerBillingReportProjectManagerBillingReportRequest
    })));
}
export function postApiV1ProjectmanagerbillingreportRunreport(webApiModulesReportsBillingProjectManagerBillingReportProjectManagerBillingReportRequest?: WebApiModulesReportsBillingProjectManagerBillingReportProjectManagerBillingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingProjectManagerBillingReportProjectManagerBillingReportRequest
    })));
}
export function postApiV1ProjectmanagerbillingreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ProjectmanagerbillingreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ProjectmanagerbillingreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ProjectmanagerbillingreportValidateprojectmanagerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/validateprojectmanager/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ProjectmanagerbillingreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ProjectmanagerbillingreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ProjectmanagerbillingreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/projectmanagerbillingreport/preview", {
        ...opts
    }));
}
export function postApiV1PurchasegldetailreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchasegldetailreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchasegldetailreportExportexcelxlsx(webApiModulesReportsAccountingReportsPurchaseGlDetailReportPurchaseGlDetailReportRequest?: WebApiModulesReportsAccountingReportsPurchaseGlDetailReportPurchaseGlDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchasegldetailreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsPurchaseGlDetailReportPurchaseGlDetailReportRequest
    })));
}
export function postApiV1PurchasegldetailreportRunreport(webApiModulesReportsAccountingReportsPurchaseGlDetailReportPurchaseGlDetailReportRequest?: WebApiModulesReportsAccountingReportsPurchaseGlDetailReportPurchaseGlDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchasegldetailreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsAccountingReportsPurchaseGlDetailReportPurchaseGlDetailReportRequest
    })));
}
export function postApiV1PurchasegldetailreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchasegldetailreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PurchasegldetailreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchasegldetailreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchasegldetailreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchasegldetailreport/preview", {
        ...opts
    }));
}
export function postApiV1PurchaseorderaccrualsRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderaccruals/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchaseorderaccrualsExportexcelxlsx(webApiModulesReportsVendorReportsPurchaseOrderAccrualsPurchaseOrderAccrualsRequest?: WebApiModulesReportsVendorReportsPurchaseOrderAccrualsPurchaseOrderAccrualsRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderaccruals/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderAccrualsPurchaseOrderAccrualsRequest
    })));
}
export function postApiV1PurchaseorderaccrualsRunreport(webApiModulesReportsVendorReportsPurchaseOrderAccrualsPurchaseOrderAccrualsRequest?: WebApiModulesReportsVendorReportsPurchaseOrderAccrualsPurchaseOrderAccrualsRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderaccruals/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderAccrualsPurchaseOrderAccrualsRequest
    })));
}
export function postApiV1PurchaseorderaccrualsValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderaccruals/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PurchaseorderaccrualsValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderaccruals/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PurchaseorderaccrualsValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderaccruals/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PurchaseorderaccrualsEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderaccruals/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchaseorderaccrualsPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderaccruals/preview", {
        ...opts
    }));
}
export function postApiV1PurchaseordermasterreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordermasterreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchaseordermasterreportExportexcelxlsx(webApiModulesReportsVendorReportsPurchaseOrderMasterReportPurchaseOrderMasterReportRequest?: WebApiModulesReportsVendorReportsPurchaseOrderMasterReportPurchaseOrderMasterReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordermasterreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderMasterReportPurchaseOrderMasterReportRequest
    })));
}
export function postApiV1PurchaseordermasterreportRunreport(webApiModulesReportsVendorReportsPurchaseOrderMasterReportPurchaseOrderMasterReportRequest?: WebApiModulesReportsVendorReportsPurchaseOrderMasterReportPurchaseOrderMasterReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordermasterreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderMasterReportPurchaseOrderMasterReportRequest
    })));
}
export function postApiV1PurchaseordermasterreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordermasterreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PurchaseordermasterreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordermasterreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PurchaseordermasterreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordermasterreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PurchaseordermasterreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordermasterreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchaseordermasterreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordermasterreport/preview", {
        ...opts
    }));
}
export function postApiV1PurchaseorderpaymentschedulereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderpaymentschedulereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchaseorderpaymentschedulereportExportexcelxlsx(webApiModulesReportsVendorReportsPurchaseOrderPaymentScheduleReportPurchaseOrderPaymentScheduleReportRequest?: WebApiModulesReportsVendorReportsPurchaseOrderPaymentScheduleReportPurchaseOrderPaymentScheduleReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderpaymentschedulereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderPaymentScheduleReportPurchaseOrderPaymentScheduleReportRequest
    })));
}
export function postApiV1PurchaseorderpaymentschedulereportRunreport(webApiModulesReportsVendorReportsPurchaseOrderPaymentScheduleReportPurchaseOrderPaymentScheduleReportRequest?: WebApiModulesReportsVendorReportsPurchaseOrderPaymentScheduleReportPurchaseOrderPaymentScheduleReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderpaymentschedulereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderPaymentScheduleReportPurchaseOrderPaymentScheduleReportRequest
    })));
}
export function postApiV1PurchaseorderpaymentschedulereportValidatepurchaseorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderpaymentschedulereport/validatepurchaseorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PurchaseorderpaymentschedulereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderpaymentschedulereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchaseorderpaymentschedulereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderpaymentschedulereport/preview", {
        ...opts
    }));
}
export function postApiV1PurchaseorderreceivelistRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreceivelist/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchaseorderreceivelistExportexcelxlsx(webApiModulesReportsVendorReportsPurchaseOrderReceiveListPurchaseOrderReceiveListRequest?: WebApiModulesReportsVendorReportsPurchaseOrderReceiveListPurchaseOrderReceiveListRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreceivelist/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderReceiveListPurchaseOrderReceiveListRequest
    })));
}
export function postApiV1PurchaseorderreceivelistRunreport(webApiModulesReportsVendorReportsPurchaseOrderReceiveListPurchaseOrderReceiveListRequest?: WebApiModulesReportsVendorReportsPurchaseOrderReceiveListPurchaseOrderReceiveListRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreceivelist/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderReceiveListPurchaseOrderReceiveListRequest
    })));
}
export function getApiV1PurchaseorderreceivelistEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreceivelist/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchaseorderreceivelistPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreceivelist/preview", {
        ...opts
    }));
}
export function postApiV1PurchaseorderreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchaseorderreportRunreport(webApiModulesReportsVendorReportsPurchaseOrderReportPurchaseOrderReportRequest?: WebApiModulesReportsVendorReportsPurchaseOrderReportPurchaseOrderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderReportPurchaseOrderReportRequest
    })));
}
export function postApiV1PurchaseorderreportValidatepurchaseorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreport/validatepurchaseorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PurchaseorderreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchaseorderreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreport/preview", {
        ...opts
    }));
}
export function postApiV1PurchaseorderreturnlistRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreturnlist/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchaseorderreturnlistExportexcelxlsx(webApiModulesReportsPurchaseOrderReportsPurchaseOrderReturnListPurchaseOrderReturnListRequest?: WebApiModulesReportsPurchaseOrderReportsPurchaseOrderReturnListPurchaseOrderReturnListRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreturnlist/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPurchaseOrderReportsPurchaseOrderReturnListPurchaseOrderReturnListRequest
    })));
}
export function postApiV1PurchaseorderreturnlistRunreport(webApiModulesReportsPurchaseOrderReportsPurchaseOrderReturnListPurchaseOrderReturnListRequest?: WebApiModulesReportsPurchaseOrderReportsPurchaseOrderReturnListPurchaseOrderReturnListRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreturnlist/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsPurchaseOrderReportsPurchaseOrderReturnListPurchaseOrderReturnListRequest
    })));
}
export function getApiV1PurchaseorderreturnlistEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreturnlist/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchaseorderreturnlistPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderreturnlist/preview", {
        ...opts
    }));
}
export function postApiV1PurchaseorderstatusdetailreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatusdetailreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchaseorderstatusdetailreportRunreport(webApiModulesReportsVendorReportsPurchaseOrderStatusDetailReportPurchaseOrderStatusDetailReportRequest?: WebApiModulesReportsVendorReportsPurchaseOrderStatusDetailReportPurchaseOrderStatusDetailReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatusdetailreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderStatusDetailReportPurchaseOrderStatusDetailReportRequest
    })));
}
export function postApiV1PurchaseorderstatusdetailreportValidatepurchaseorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatusdetailreport/validatepurchaseorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PurchaseorderstatusdetailreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatusdetailreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchaseorderstatusdetailreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatusdetailreport/preview", {
        ...opts
    }));
}
export function postApiV1PurchaseorderstatussummaryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatussummaryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchaseorderstatussummaryreportRunreport(webApiModulesReportsVendorReportsPurchaseOrderStatusSummaryReportPurchaseOrderStatusSummaryReportRequest?: WebApiModulesReportsVendorReportsPurchaseOrderStatusSummaryReportPurchaseOrderStatusSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatussummaryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderStatusSummaryReportPurchaseOrderStatusSummaryReportRequest
    })));
}
export function postApiV1PurchaseorderstatussummaryreportValidatepurchaseorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatussummaryreport/validatepurchaseorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PurchaseorderstatussummaryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatussummaryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchaseorderstatussummaryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseorderstatussummaryreport/preview", {
        ...opts
    }));
}
export function postApiV1PurchaseordersummaryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1PurchaseordersummaryreportExportexcelxlsx(webApiModulesReportsVendorReportsPurchaseOrderSummaryReportPurchaseOrderSummaryReportRequest?: WebApiModulesReportsVendorReportsPurchaseOrderSummaryReportPurchaseOrderSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderSummaryReportPurchaseOrderSummaryReportRequest
    })));
}
export function postApiV1PurchaseordersummaryreportRunreport(webApiModulesReportsVendorReportsPurchaseOrderSummaryReportPurchaseOrderSummaryReportRequest?: WebApiModulesReportsVendorReportsPurchaseOrderSummaryReportPurchaseOrderSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsPurchaseOrderSummaryReportPurchaseOrderSummaryReportRequest
    })));
}
export function postApiV1PurchaseordersummaryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PurchaseordersummaryreportValidateprojectBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/validateproject/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PurchaseordersummaryreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PurchaseordersummaryreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1PurchaseordersummaryreportValidatepoapprovalstatusBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/validatepoapprovalstatus/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1PurchaseordersummaryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1PurchaseordersummaryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/purchaseordersummaryreport/preview", {
        ...opts
    }));
}
export function postApiV1QuikactivityreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1QuikactivityreportExportexcelxlsx(webApiModulesReportsOrderReportsQuikActivityReportQuikActivityReportRequest?: WebApiModulesReportsOrderReportsQuikActivityReportQuikActivityReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsQuikActivityReportQuikActivityReportRequest
    })));
}
export function postApiV1QuikactivityreportRunreport(webApiModulesReportsOrderReportsQuikActivityReportQuikActivityReportRequest?: WebApiModulesReportsOrderReportsQuikActivityReportQuikActivityReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsQuikActivityReportQuikActivityReportRequest
    })));
}
export function postApiV1QuikactivityreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuikactivityreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuikactivityreportValidateactivitytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/validateactivitytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuikactivityreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuikactivityreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuikactivityreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1QuikactivityreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1QuikactivityreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikactivityreport/preview", {
        ...opts
    }));
}
export function postApiV1QuikincontractreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikincontractreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1QuikincontractreportRunreport(webApiModulesReportsContractReportsQuikInContractReportQuikInContractReportRequest?: WebApiModulesReportsContractReportsQuikInContractReportQuikInContractReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikincontractreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsQuikInContractReportQuikInContractReportRequest
    })));
}
export function postApiV1QuikincontractreportValidatecontractBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikincontractreport/validatecontract/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1QuikincontractreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikincontractreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1QuikincontractreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikincontractreport/preview", {
        ...opts
    }));
}
export function postApiV1QuikreceiptreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikreceiptreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1QuikreceiptreportExportexcelxlsx(webApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportRequest?: WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikreceiptreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportRequest
    })));
}
export function postApiV1QuikreceiptreportRunreport(webApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportRequest?: WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportLRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikreceiptreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsQuikReceiptReportQuikReceiptReportRequest
    })));
}
export function getApiV1QuikreceiptreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikreceiptreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1QuikreceiptreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quikreceiptreport/preview", {
        ...opts
    }));
}
export function postApiV1QuotebillingschedulereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotebillingschedulereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1QuotebillingschedulereportRunreport(webApiModulesReportsBillingQuoteBillingScheduleReportQuoteBillingScheduleReportRequest?: WebApiModulesReportsBillingQuoteBillingScheduleReportQuoteBillingScheduleReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotebillingschedulereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingQuoteBillingScheduleReportQuoteBillingScheduleReportRequest
    })));
}
export function postApiV1QuotebillingschedulereportValidatequoteBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotebillingschedulereport/validatequote/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1QuotebillingschedulereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotebillingschedulereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1QuotebillingschedulereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotebillingschedulereport/preview", {
        ...opts
    }));
}
export function postApiV1QuoteordermasterreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1QuoteordermasterreportExportexcelxlsx(webApiModulesReportsOrderReportsQuoteOrderMasterReportQuoteOrderMasterReportRequest?: WebApiModulesReportsOrderReportsQuoteOrderMasterReportQuoteOrderMasterReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsQuoteOrderMasterReportQuoteOrderMasterReportRequest
    })));
}
export function postApiV1QuoteordermasterreportRunreport(webApiModulesReportsOrderReportsQuoteOrderMasterReportQuoteOrderMasterReportRequest?: WebApiModulesReportsOrderReportsQuoteOrderMasterReportQuoteOrderMasterReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsQuoteOrderMasterReportQuoteOrderMasterReportRequest
    })));
}
export function postApiV1QuoteordermasterreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuoteordermasterreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuoteordermasterreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuoteordermasterreportValidatedealtypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/validatedealtype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuoteordermasterreportValidatedealstatusBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/validatedealstatus/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1QuoteordermasterreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1QuoteordermasterreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1QuoteordermasterreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quoteordermasterreport/preview", {
        ...opts
    }));
}
export function postApiV1QuotereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1QuotereportRunreport(webApiModulesReportsOrderReportsQuoteReportQuoteReportRequest?: WebApiModulesReportsOrderReportsQuoteReportQuoteReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsQuoteReportQuoteReportRequest
    })));
}
export function postApiV1QuotereportValidatequoteBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotereport/validatequote/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1QuotereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1QuotereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/quotereport/preview", {
        ...opts
    }));
}
export function postApiV1RateupdatereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rateupdatereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RateupdatereportExportexcelxlsx(webApiModulesReportsRateUpdateReportRateUpdateReportRequest?: WebApiModulesReportsRateUpdateReportRateUpdateReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rateupdatereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRateUpdateReportRateUpdateReportRequest
    })));
}
export function postApiV1RateupdatereportRunreport(webApiModulesReportsRateUpdateReportRateUpdateReportRequest?: WebApiModulesReportsRateUpdateReportRateUpdateReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rateupdatereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRateUpdateReportRateUpdateReportRequest
    })));
}
export function postApiV1RateupdatereportValidatebatchBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rateupdatereport/validatebatch/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RateupdatereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rateupdatereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RateupdatereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rateupdatereport/preview", {
        ...opts
    }));
}
export function postApiV1ReceiptbatchreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptbatchreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ReceiptbatchreportExportexcelxlsx(webApiModulesReportsChargeProcessingReportsReceiptBatchReportReceiptBatchReportRequest?: WebApiModulesReportsChargeProcessingReportsReceiptBatchReportReceiptBatchReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptbatchreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsChargeProcessingReportsReceiptBatchReportReceiptBatchReportRequest
    })));
}
export function postApiV1ReceiptbatchreportRunreport(webApiModulesReportsChargeProcessingReportsReceiptBatchReportReceiptBatchReportRequest?: WebApiModulesReportsChargeProcessingReportsReceiptBatchReportReceiptBatchReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptbatchreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsChargeProcessingReportsReceiptBatchReportReceiptBatchReportRequest
    })));
}
export function postApiV1ReceiptbatchreportValidatebatchBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptbatchreport/validatebatch/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ReceiptbatchreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptbatchreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ReceiptbatchreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptbatchreport/preview", {
        ...opts
    }));
}
export function postApiV1ReceiptreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ReceiptreportExportexcelxlsx(webApiModulesReportsBillingReportsReceiptReportReceiptReportRequest?: WebApiModulesReportsBillingReportsReceiptReportReceiptReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingReportsReceiptReportReceiptReportRequest
    })));
}
export function postApiV1ReceiptreportRunreport(webApiModulesReportsBillingReportsReceiptReportReceiptReportRequest?: WebApiModulesReportsBillingReportsReceiptReportReceiptReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingReportsReceiptReportReceiptReportRequest
    })));
}
export function postApiV1ReceiptreportValidatereceiptBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptreport/validatereceipt/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ReceiptreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ReceiptreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receiptreport/preview", {
        ...opts
    }));
}
export function postApiV1ReceivecontractreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receivecontractreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ReceivecontractreportRunreport(webApiModulesReportsContractReportsReceiveContractReportReceiveContractReportRequest?: WebApiModulesReportsContractReportsReceiveContractReportReceiveContractReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receivecontractreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsReceiveContractReportReceiveContractReportRequest
    })));
}
export function postApiV1ReceivecontractreportValidatecontractBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receivecontractreport/validatecontract/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ReceivecontractreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receivecontractreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ReceivecontractreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/receivecontractreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryactivitybydatereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryactivitybydatereportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryActivityByDateReportRentalInventoryActivityByDateReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryActivityByDateReportRentalInventoryActivityByDateReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryActivityByDateReportRentalInventoryActivityByDateReportRequest
    })));
}
export function postApiV1RentalinventoryactivitybydatereportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryActivityByDateReportRentalInventoryActivityByDateReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryActivityByDateReportRentalInventoryActivityByDateReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryActivityByDateReportRentalInventoryActivityByDateReportRequest
    })));
}
export function postApiV1RentalinventoryactivitybydatereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryactivitybydatereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryactivitybydatereportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryactivitybydatereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryactivitybydatereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryactivitybydatereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryactivitybydatereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryactivitybydatereport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryassetattributereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryassetattributereportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryAssetAttributeReportRentalInventoryAssetAttributeReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryAssetAttributeReportRentalInventoryAssetAttributeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryAssetAttributeReportRentalInventoryAssetAttributeReportRequest
    })));
}
export function postApiV1RentalinventoryassetattributereportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryAssetAttributeReportRentalInventoryAssetAttributeReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryAssetAttributeReportRentalInventoryAssetAttributeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryAssetAttributeReportRentalInventoryAssetAttributeReportRequest
    })));
}
export function postApiV1RentalinventoryassetattributereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryassetattributereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryassetattributereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryassetattributereportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryassetattributereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryassetattributereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryassetattributereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryassetattributereport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryattributesreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryattributesreportExportexcelxlsx(webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest?: WebApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest
    })));
}
export function postApiV1RentalinventoryattributesreportRunreport(webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest?: WebApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest
    })));
}
export function postApiV1RentalinventoryattributesreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryattributesreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryattributesreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryattributesreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryattributesreportValidateattributeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/validateattribute/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryattributesreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryattributesreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryattributesreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryavailabilityreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryavailabilityreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryAvailabilityReportRentalInventoryAvailabilityReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryAvailabilityReportRentalInventoryAvailabilityReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryAvailabilityReportRentalInventoryAvailabilityReportRequest
    })));
}
export function postApiV1RentalinventoryavailabilityreportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryAvailabilityReportRentalInventoryAvailabilityReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryAvailabilityReportRentalInventoryAvailabilityReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryAvailabilityReportRentalInventoryAvailabilityReportRequest
    })));
}
export function postApiV1RentalinventoryavailabilityreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryavailabilityreportValidaterentalcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/validaterentalcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryavailabilityreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryavailabilityreportValidaterentalinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/validaterentalinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryavailabilityreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryavailabilityreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryavailabilityreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryavailabilityreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventorycatalogreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventorycatalogreportExportexcelxlsx(webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest?: WebApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest
    })));
}
export function postApiV1RentalinventorycatalogreportRunreport(webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest?: WebApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest
    })));
}
export function postApiV1RentalinventorycatalogreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorycatalogreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorycatalogreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorycatalogreportValidatewarehousecatalogBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/validatewarehousecatalog/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorycatalogreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorycatalogreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventorycatalogreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventorycatalogreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorycatalogreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventorychangereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventorychangereportExportexcelxlsx(webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest?: WebApiModulesReportsInventoryChangeReportInventoryChangeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest
    })));
}
export function postApiV1RentalinventorychangereportRunreport(webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest?: WebApiModulesReportsInventoryChangeReportInventoryChangeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest
    })));
}
export function postApiV1RentalinventorychangereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorychangereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorychangereportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorychangereportValidatetransactiontypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/validatetransactiontype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorychangereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorychangereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventorychangereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventorychangereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorychangereport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventorymasterreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventorymasterreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryMasterReportRentalInventoryMasterReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryMasterReportRentalInventoryMasterReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryMasterReportRentalInventoryMasterReportRequest
    })));
}
export function postApiV1RentalinventorymasterreportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryMasterReportRentalInventoryMasterReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryMasterReportRentalInventoryMasterReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryMasterReportRentalInventoryMasterReportRequest
    })));
}
export function postApiV1RentalinventorymasterreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorymasterreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorymasterreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorymasterreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorymasterreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventorymasterreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventorymasterreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymasterreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventorymovementreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventorymovementreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryMovementReportRentalInventoryMovementReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryMovementReportRentalInventoryMovementReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryMovementReportRentalInventoryMovementReportRequest
    })));
}
export function postApiV1RentalinventorymovementreportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryMovementReportRentalInventoryMovementReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryMovementReportRentalInventoryMovementReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryMovementReportRentalInventoryMovementReportRequest
    })));
}
export function postApiV1RentalinventorymovementreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorymovementreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorymovementreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorymovementreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorymovementreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventorymovementreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventorymovementreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorymovementreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryoutagereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryoutagereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryoutagereportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryOutageReportRentalInventoryOutageReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryOutageReportRentalInventoryOutageReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryoutagereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryOutageReportRentalInventoryOutageReportRequest
    })));
}
export function postApiV1RentalinventoryoutagereportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryOutageReportRentalInventoryOutageReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryOutageReportRentalInventoryOutageReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryoutagereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryOutageReportRentalInventoryOutageReportRequest
    })));
}
export function postApiV1RentalinventoryoutagereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryoutagereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryoutagereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryoutagereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryoutagereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryoutagereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryoutagereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryoutagereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryoutagereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryoutagereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryoutagereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryoutagereport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventorypurchasehistoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventorypurchasehistoryreportExportexcelxlsx(webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest?: WebApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest
    })));
}
export function postApiV1RentalinventorypurchasehistoryreportRunreport(webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest?: WebApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest
    })));
}
export function postApiV1RentalinventorypurchasehistoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorypurchasehistoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorypurchasehistoryreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorypurchasehistoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorypurchasehistoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorypurchasehistoryreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventorypurchasehistoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventorypurchasehistoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorypurchasehistoryreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryqcrequiredreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryqcrequiredreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryQcRequiredReportRentalInventoryQcRequiredReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryQcRequiredReportRentalInventoryQcRequiredReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryQcRequiredReportRentalInventoryQcRequiredReportRequest
    })));
}
export function postApiV1RentalinventoryqcrequiredreportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryQcRequiredReportRentalInventoryQcRequiredReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryQcRequiredReportRentalInventoryQcRequiredReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryQcRequiredReportRentalInventoryQcRequiredReportRequest
    })));
}
export function postApiV1RentalinventoryqcrequiredreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryqcrequiredreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryqcrequiredreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryqcrequiredreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryqcrequiredreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryqcrequiredreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryqcrequiredreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryqcrequiredreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryquantityownedreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryquantityownedreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryquantityownedreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryQuantityOwnedReportRentalInventoryQuantityOwnedReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryQuantityOwnedReportRentalInventoryQuantityOwnedReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryquantityownedreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryQuantityOwnedReportRentalInventoryQuantityOwnedReportRequest
    })));
}
export function postApiV1RentalinventoryquantityownedreportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryQuantityOwnedReportRentalInventoryQuantityOwnedReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryQuantityOwnedReportRentalInventoryQuantityOwnedReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryquantityownedreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryQuantityOwnedReportRentalInventoryQuantityOwnedReportRequest
    })));
}
export function postApiV1RentalinventoryquantityownedreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryquantityownedreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryquantityownedreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryquantityownedreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryquantityownedreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryquantityownedreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryquantityownedreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryquantityownedreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryquantityownedreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryquantityownedreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryquantityownedreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryquantityownedreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryrepairhistoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryrepairhistoryreportExportexcelxlsx(webApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest?: WebApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest
    })));
}
export function postApiV1RentalinventoryrepairhistoryreportRunreport(webApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest?: WebApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest
    })));
}
export function postApiV1RentalinventoryrepairhistoryreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryrepairhistoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryrepairhistoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryrepairhistoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryrepairhistoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryrepairhistoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryrepairhistoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryrepairhistoryreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventorystatusandrevenuereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorystatusandrevenuereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventorystatusandrevenuereportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryStatusAndRevenueReportRentalInventoryStatusAndRevenueReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryStatusAndRevenueReportRentalInventoryStatusAndRevenueReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorystatusandrevenuereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryStatusAndRevenueReportRentalInventoryStatusAndRevenueReportRequest
    })));
}
export function postApiV1RentalinventorystatusandrevenuereportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryStatusAndRevenueReportRentalInventoryStatusAndRevenueReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryStatusAndRevenueReportRentalInventoryStatusAndRevenueReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorystatusandrevenuereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryStatusAndRevenueReportRentalInventoryStatusAndRevenueReportRequest
    })));
}
export function postApiV1RentalinventorystatusandrevenuereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorystatusandrevenuereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorystatusandrevenuereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorystatusandrevenuereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorystatusandrevenuereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorystatusandrevenuereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventorystatusandrevenuereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorystatusandrevenuereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventorystatusandrevenuereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorystatusandrevenuereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventorystatusandrevenuereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorystatusandrevenuereport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventorysummarybyrankreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorysummarybyrankreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventorysummarybyrankreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventorySummaryByRankReportRentalInventorySummaryByRankReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventorySummaryByRankReportRentalInventorySummaryByRankReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorysummarybyrankreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventorySummaryByRankReportRentalInventorySummaryByRankReportRequest
    })));
}
export function postApiV1RentalinventorysummarybyrankreportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventorySummaryByRankReportRentalInventorySummaryByRankReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventorySummaryByRankReportRentalInventorySummaryByRankReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorysummarybyrankreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventorySummaryByRankReportRentalInventorySummaryByRankReportRequest
    })));
}
export function postApiV1RentalinventorysummarybyrankreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorysummarybyrankreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventorysummarybyrankreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorysummarybyrankreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventorysummarybyrankreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventorysummarybyrankreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryunuseditemsreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryunuseditemsreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryUnusedItemsReportRentalInventoryUnusedItemsReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryUnusedItemsReportRentalInventoryUnusedItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryUnusedItemsReportRentalInventoryUnusedItemsReportRequest
    })));
}
export function postApiV1RentalinventoryunuseditemsreportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryUnusedItemsReportRentalInventoryUnusedItemsReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryUnusedItemsReportRentalInventoryUnusedItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryUnusedItemsReportRentalInventoryUnusedItemsReportRequest
    })));
}
export function postApiV1RentalinventoryunuseditemsreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryunuseditemsreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryunuseditemsreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryunuseditemsreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryunuseditemsreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryunuseditemsreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryunuseditemsreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryunuseditemsreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryunuseditemsreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryunuseditemsreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryusagebycustomerreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryusagebycustomerreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryUsageByCustomerReportRentalInventoryUsageByCustomerReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryUsageByCustomerReportRentalInventoryUsageByCustomerReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryUsageByCustomerReportRentalInventoryUsageByCustomerReportRequest
    })));
}
export function postApiV1RentalinventoryusagebycustomerreportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryUsageByCustomerReportRentalInventoryUsageByCustomerReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryUsageByCustomerReportRentalInventoryUsageByCustomerReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryUsageByCustomerReportRentalInventoryUsageByCustomerReportRequest
    })));
}
export function postApiV1RentalinventoryusagebycustomerreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryusagebycustomerreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryusagebycustomerreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryusagebycustomerreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryusagebycustomerreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryusagebycustomerreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryusagebycustomerreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagebycustomerreport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryusagereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryusagereportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryUsageReportRentalInventoryUsageReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryUsageReportRentalInventoryUsageReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryUsageReportRentalInventoryUsageReportRequest
    })));
}
export function postApiV1RentalinventoryusagereportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryUsageReportRentalInventoryUsageReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryUsageReportRentalInventoryUsageReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryUsageReportRentalInventoryUsageReportRequest
    })));
}
export function postApiV1RentalinventoryusagereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryusagereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryusagereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryusagereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryusagereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryusagereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryusagereport/preview", {
        ...opts
    }));
}
export function postApiV1RentalinventoryvaluereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentalinventoryvaluereportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalInventoryValueReportRentalInventoryValueReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryValueReportRentalInventoryValueReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryValueReportRentalInventoryValueReportRequest
    })));
}
export function postApiV1RentalinventoryvaluereportRunreport(webApiModulesReportsRentalInventoryReportsRentalInventoryValueReportRentalInventoryValueReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalInventoryValueReportRentalInventoryValueReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalInventoryValueReportRentalInventoryValueReportRequest
    })));
}
export function postApiV1RentalinventoryvaluereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryvaluereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryvaluereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryvaluereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentalinventoryvaluereportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentalinventoryvaluereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentalinventoryvaluereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentalinventoryvaluereport/preview", {
        ...opts
    }));
}
export function postApiV1RentallostanddamagedbillinghistoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRentalLostAndDamagedBillingHistoryReportRentalLostAndDamagedBillingHistoryReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalLostAndDamagedBillingHistoryReportRentalLostAndDamagedBillingHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalLostAndDamagedBillingHistoryReportRentalLostAndDamagedBillingHistoryReportRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportRunreport(webApiModulesReportsRentalInventoryReportsRentalLostAndDamagedBillingHistoryReportRentalLostAndDamagedBillingHistoryReportRequest?: WebApiModulesReportsRentalInventoryReportsRentalLostAndDamagedBillingHistoryReportRentalLostAndDamagedBillingHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRentalLostAndDamagedBillingHistoryReportRentalLostAndDamagedBillingHistoryReportRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportValidateretiredreasonBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/validateretiredreason/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportValidateunretiredreasonBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/validateunretiredreason/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RentallostanddamagedbillinghistoryreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RentallostanddamagedbillinghistoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RentallostanddamagedbillinghistoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/rentallostanddamagedbillinghistoryreport/preview", {
        ...opts
    }));
}
export function postApiV1RepairorderreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RepairorderreportRunreport(webApiModulesReportsRepairReportsRepairOrderReportRepairOrderReportRequest?: WebApiModulesReportsRepairReportsRepairOrderReportRepairOrderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRepairReportsRepairOrderReportRepairOrderReportRequest
    })));
}
export function getApiV1RepairorderreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RepairorderreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderreport/preview", {
        ...opts
    }));
}
export function postApiV1RepairorderstatusreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RepairorderstatusreportExportexcelxlsx(webApiModulesReportsRepairOrderReportsRepairOrderStatusReportRepairOrderStatusReportRequest?: WebApiModulesReportsRepairOrderReportsRepairOrderStatusReportRepairOrderStatusReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRepairOrderReportsRepairOrderStatusReportRepairOrderStatusReportRequest
    })));
}
export function postApiV1RepairorderstatusreportRunreport(webApiModulesReportsRepairOrderReportsRepairOrderStatusReportRepairOrderStatusReportRequest?: WebApiModulesReportsRepairOrderReportsRepairOrderStatusReportRepairOrderStatusReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRepairOrderReportsRepairOrderStatusReportRepairOrderStatusReportRequest
    })));
}
export function postApiV1RepairorderstatusreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RepairorderstatusreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RepairorderstatusreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RepairorderstatusreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RepairorderstatusreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RepairorderstatusreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RepairorderstatusreportValidaterepairitemstatusBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/validaterepairitemstatus/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RepairorderstatusreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RepairorderstatusreportValidatevendorrepairitemstatusBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/validatevendorrepairitemstatus/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RepairorderstatusreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RepairorderstatusreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairorderstatusreport/preview", {
        ...opts
    }));
}
export function postApiV1RepairtagRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairtag/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RepairtagExportexcelxlsx(webApiModulesReportsRepairOrderReportsRepairTagRepairTagRequest?: WebApiModulesReportsRepairOrderReportsRepairTagRepairTagRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairtag/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRepairOrderReportsRepairTagRepairTagRequest
    })));
}
export function postApiV1RepairtagRunreport(webApiModulesReportsRepairOrderReportsRepairTagRepairTagRequest?: WebApiModulesReportsRepairOrderReportsRepairTagRepairTagRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairtag/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRepairOrderReportsRepairTagRepairTagRequest
    })));
}
export function getApiV1RepairtagEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairtag/emptyobject", {
        ...opts
    }));
}
export function getApiV1RepairtagPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/repairtag/preview", {
        ...opts
    }));
}
export function postApiV1ReportsettingsBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/reportsettings/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReportsettingsExportexcelxlsx(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/reportsettings/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1Reportsettings({ pageno, pagesize, sort, filter }: {
    pageno?: number;
    pagesize?: number;
    sort?: string;
    filter?: FwStandardModelsFwQueryFilter[];
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardModelsFwQueryResponseWebApiModulesReportsSharedReportSettingsReportSettingsLogicRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>(`/api/v1/reportsettings${QS.query(QS.explode({
        pageno,
        pagesize,
        sort,
        filter
    }))}`, {
        ...opts
    }));
}
export function postApiV1Reportsettings(webApiModulesReportsSharedReportSettingsReportSettings?: WebApiModulesReportsSharedReportSettingsReportSettings, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiModulesReportsSharedReportSettingsReportSettingsRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/reportsettings", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedReportSettingsReportSettings
    })));
}
export function getApiV1ReportsettingsById(id: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiModulesReportsSharedReportSettingsReportSettingsRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>(`/api/v1/reportsettings/${encodeURIComponent(id)}`, {
        ...opts
    }));
}
export function putApiV1ReportsettingsById(id: string, webApiModulesReportsSharedReportSettingsReportSettings?: WebApiModulesReportsSharedReportSettingsReportSettings, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiModulesReportsSharedReportSettingsReportSettingsRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>(`/api/v1/reportsettings/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body: webApiModulesReportsSharedReportSettingsReportSettings
    })));
}
export function deleteApiV1ReportsettingsById(id: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: boolean;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>(`/api/v1/reportsettings/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE"
    }));
}
export function postApiV1RetiredrentalinventoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsRetiredRentalInventoryReportRetiredRentalInventoryReportRequest?: WebApiModulesReportsRentalInventoryReportsRetiredRentalInventoryReportRetiredRentalInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRetiredRentalInventoryReportRetiredRentalInventoryReportRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportRunreport(webApiModulesReportsRentalInventoryReportsRetiredRentalInventoryReportRetiredRentalInventoryReportRequest?: WebApiModulesReportsRentalInventoryReportsRetiredRentalInventoryReportRetiredRentalInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsRetiredRentalInventoryReportRetiredRentalInventoryReportRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportValidateretiredreasonBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/validateretiredreason/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RetiredrentalinventoryreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RetiredrentalinventoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RetiredrentalinventoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/retiredrentalinventoryreport/preview", {
        ...opts
    }));
}
export function postApiV1ReturncontractreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returncontractreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ReturncontractreportRunreport(webApiModulesReportsContractReportsReturnContractReportReturnContractReportRequest?: WebApiModulesReportsContractReportsReturnContractReportReturnContractReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returncontractreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsReturnContractReportReturnContractReportRequest
    })));
}
export function postApiV1ReturncontractreportValidatecontractBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returncontractreport/validatecontract/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ReturncontractreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returncontractreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ReturncontractreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returncontractreport/preview", {
        ...opts
    }));
}
export function postApiV1ReturnedtoinventoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ReturnedtoinventoryreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsReturnedToInventoryReportReturnedToInventoryReportRequest?: WebApiModulesReportsRentalInventoryReportsReturnedToInventoryReportReturnedToInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsReturnedToInventoryReportReturnedToInventoryReportRequest
    })));
}
export function postApiV1ReturnedtoinventoryreportRunreport(webApiModulesReportsRentalInventoryReportsReturnedToInventoryReportReturnedToInventoryReportRequest?: WebApiModulesReportsRentalInventoryReportsReturnedToInventoryReportReturnedToInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsReturnedToInventoryReportReturnedToInventoryReportRequest
    })));
}
export function postApiV1ReturnedtoinventoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnedtoinventoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnedtoinventoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnedtoinventoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnedtoinventoryreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnedtoinventoryreportValidateuserBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/validateuser/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnedtoinventoryreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ReturnedtoinventoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ReturnedtoinventoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnedtoinventoryreport/preview", {
        ...opts
    }));
}
export function postApiV1ReturnlistreportExportexcelxlsx(webApiModulesReportsContractReportsReturnListReportReturnListReportRequest?: WebApiModulesReportsContractReportsReturnListReportReturnListReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnlistreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsReturnListReportReturnListReportRequest
    })));
}
export function postApiV1ReturnlistreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnlistreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ReturnlistreportRunreport(webApiModulesReportsContractReportsReturnListReportReturnListReportRequest?: WebApiModulesReportsContractReportsReturnListReportReturnListReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnlistreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsReturnListReportReturnListReportRequest
    })));
}
export function postApiV1ReturnlistreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnlistreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ReturnlistreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnlistreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ReturnlistreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnlistreport/preview", {
        ...opts
    }));
}
export function postApiV1ReturnonassetperiodBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetperiod/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnonassetperiodExportexcelxlsx(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetperiod/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnonassetreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ReturnonassetreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsReturnOnAssetReportReturnOnAssetReportRequest?: WebApiModulesReportsRentalInventoryReportsReturnOnAssetReportReturnOnAssetReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsReturnOnAssetReportReturnOnAssetReportRequest
    })));
}
export function postApiV1ReturnonassetreportRunreport(webApiModulesReportsRentalInventoryReportsReturnOnAssetReportReturnOnAssetReportRequest?: WebApiModulesReportsRentalInventoryReportsReturnOnAssetReportReturnOnAssetReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsReturnOnAssetReportReturnOnAssetReportRequest
    })));
}
export function postApiV1ReturnonassetreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnonassetreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnonassetreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnonassetreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnonassetreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ReturnonassetreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ReturnonassetreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetreport/preview", {
        ...opts
    }));
}
export function postApiV1ReturnonassetyearBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetyear/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnonassetyearExportexcelxlsx(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnonassetyear/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnreceiptreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ReturnreceiptreportExportexcelxlsx(webApiModulesReportsDealReportsReturnReceiptReportReturnReceiptReportRequest?: WebApiModulesReportsDealReportsReturnReceiptReportReturnReceiptReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsReturnReceiptReportReturnReceiptReportRequest
    })));
}
export function postApiV1ReturnreceiptreportRunreport(webApiModulesReportsDealReportsReturnReceiptReportReturnReceiptReportRequest?: WebApiModulesReportsDealReportsReturnReceiptReportReturnReceiptReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsDealReportsReturnReceiptReportReturnReceiptReportRequest
    })));
}
export function postApiV1ReturnreceiptreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnreceiptreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnreceiptreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnreceiptreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnreceiptreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ReturnreceiptreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ReturnreceiptreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ReturnreceiptreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/returnreceiptreport/preview", {
        ...opts
    }));
}
export function postApiV1RevenuereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1RevenuereportExportexcelxlsx(webApiModulesReportsBillingReportsRevenueReportRevenueReportRequest?: WebApiModulesReportsBillingReportsRevenueReportRevenueReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingReportsRevenueReportRevenueReportRequest
    })));
}
export function postApiV1RevenuereportRunreport(webApiModulesReportsBillingReportsRevenueReportRevenueReportRequest?: WebApiModulesReportsBillingReportsRevenueReportRevenueReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingReportsRevenueReportRevenueReportRequest
    })));
}
export function postApiV1RevenuereportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RevenuereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RevenuereportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RevenuereportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RevenuereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RevenuereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RevenuereportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1RevenuereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1RevenuereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1RevenuereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/revenuereport/preview", {
        ...opts
    }));
}
export function postApiV1SalesbackorderreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesbackorderreportExportexcelxlsx(webApiModulesReportsSalesInventoryReportsSalesBackorderReportSalesBackorderReportRequest?: WebApiModulesReportsSalesInventoryReportsSalesBackorderReportSalesBackorderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSalesInventoryReportsSalesBackorderReportSalesBackorderReportRequest
    })));
}
export function postApiV1SalesbackorderreportRunreport(webApiModulesReportsSalesInventoryReportsSalesBackorderReportSalesBackorderReportRequest?: WebApiModulesReportsSalesInventoryReportsSalesBackorderReportSalesBackorderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSalesInventoryReportsSalesBackorderReportSalesBackorderReportRequest
    })));
}
export function postApiV1SalesbackorderreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesbackorderreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesbackorderreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesbackorderreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesbackorderreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesbackorderreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesbackorderreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesbackorderreport/preview", {
        ...opts
    }));
}
export function postApiV1SaleshistoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SaleshistoryreportExportexcelxlsx(webApiModulesReportsSalesInventoryReportsSalesHistoryReportSalesHistoryReportRequest?: WebApiModulesReportsSalesInventoryReportsSalesHistoryReportSalesHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSalesInventoryReportsSalesHistoryReportSalesHistoryReportRequest
    })));
}
export function postApiV1SaleshistoryreportRunreport(webApiModulesReportsSalesInventoryReportsSalesHistoryReportSalesHistoryReportRequest?: WebApiModulesReportsSalesInventoryReportsSalesHistoryReportSalesHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSalesInventoryReportsSalesHistoryReportSalesHistoryReportRequest
    })));
}
export function postApiV1SaleshistoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SaleshistoryreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SaleshistoryreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SaleshistoryreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SaleshistoryreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SaleshistoryreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SaleshistoryreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SaleshistoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SaleshistoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SaleshistoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/saleshistoryreport/preview", {
        ...opts
    }));
}
export function postApiV1SalesinventoryattributesreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesinventoryattributesreportExportexcelxlsx(webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest?: WebApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest
    })));
}
export function postApiV1SalesinventoryattributesreportRunreport(webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest?: WebApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryAttributesReportInventoryAttributesReportRequest
    })));
}
export function postApiV1SalesinventoryattributesreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryattributesreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryattributesreportValidateattributeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/validateattribute/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryattributesreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryattributesreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesinventoryattributesreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesinventoryattributesreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryattributesreport/preview", {
        ...opts
    }));
}
export function postApiV1SalesinventorycatalogreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesinventorycatalogreportExportexcelxlsx(webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest?: WebApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest
    })));
}
export function postApiV1SalesinventorycatalogreportRunreport(webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest?: WebApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryCatalogReportInventoryCatalogReportRequest
    })));
}
export function postApiV1SalesinventorycatalogreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorycatalogreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorycatalogreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorycatalogreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorycatalogreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorycatalogreportValidatewarehousecatalogBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/validatewarehousecatalog/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesinventorycatalogreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesinventorycatalogreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorycatalogreport/preview", {
        ...opts
    }));
}
export function postApiV1SalesinventorychangereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesinventorychangereportExportexcelxlsx(webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest?: WebApiModulesReportsInventoryChangeReportInventoryChangeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest
    })));
}
export function postApiV1SalesinventorychangereportRunreport(webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest?: WebApiModulesReportsInventoryChangeReportInventoryChangeReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryChangeReportInventoryChangeReportRequest
    })));
}
export function postApiV1SalesinventorychangereportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorychangereportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorychangereportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorychangereportValidatetransactiontypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/validatetransactiontype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorychangereportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorychangereportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesinventorychangereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesinventorychangereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorychangereport/preview", {
        ...opts
    }));
}
export function postApiV1SalesinventorymasterreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorymasterreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesinventorymasterreportExportexcelxlsx(webApiModulesReportsSalesInventoryReportsSalesInventoryMasterReportSalesInventoryMasterReportRequest?: WebApiModulesReportsSalesInventoryReportsSalesInventoryMasterReportSalesInventoryMasterReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorymasterreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSalesInventoryReportsSalesInventoryMasterReportSalesInventoryMasterReportRequest
    })));
}
export function postApiV1SalesinventorymasterreportRunreport(webApiModulesReportsSalesInventoryReportsSalesInventoryMasterReportSalesInventoryMasterReportRequest?: WebApiModulesReportsSalesInventoryReportsSalesInventoryMasterReportSalesInventoryMasterReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorymasterreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSalesInventoryReportsSalesInventoryMasterReportSalesInventoryMasterReportRequest
    })));
}
export function postApiV1SalesinventorymasterreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorymasterreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorymasterreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorymasterreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorymasterreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorymasterreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorymasterreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorymasterreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesinventorymasterreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorymasterreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesinventorymasterreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorymasterreport/preview", {
        ...opts
    }));
}
export function postApiV1SalesinventorypurchasehistoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesinventorypurchasehistoryreportExportexcelxlsx(webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest?: WebApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest
    })));
}
export function postApiV1SalesinventorypurchasehistoryreportRunreport(webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest?: WebApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryPurchaseHistoryReportInventoryPurchaseHistoryReportRequest
    })));
}
export function postApiV1SalesinventorypurchasehistoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorypurchasehistoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorypurchasehistoryreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorypurchasehistoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorypurchasehistoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorypurchasehistoryreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesinventorypurchasehistoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesinventorypurchasehistoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorypurchasehistoryreport/preview", {
        ...opts
    }));
}
export function postApiV1SalesinventoryreorderreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesinventoryreorderreportExportexcelxlsx(webApiModulesReportsSalesInventoryReportsSalesInventoryReorderReportSalesInventoryReorderReportRequest?: WebApiModulesReportsSalesInventoryReportsSalesInventoryReorderReportSalesInventoryReorderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSalesInventoryReportsSalesInventoryReorderReportSalesInventoryReorderReportRequest
    })));
}
export function postApiV1SalesinventoryreorderreportRunreport(webApiModulesReportsSalesInventoryReportsSalesInventoryReorderReportSalesInventoryReorderReportRequest?: WebApiModulesReportsSalesInventoryReportsSalesInventoryReorderReportSalesInventoryReorderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSalesInventoryReportsSalesInventoryReorderReportSalesInventoryReorderReportRequest
    })));
}
export function postApiV1SalesinventoryreorderreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryreorderreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryreorderreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryreorderreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryreorderreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesinventoryreorderreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesinventoryreorderreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryreorderreport/preview", {
        ...opts
    }));
}
export function postApiV1SalesinventoryrepairhistoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesinventoryrepairhistoryreportExportexcelxlsx(webApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest?: WebApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest
    })));
}
export function postApiV1SalesinventoryrepairhistoryreportRunreport(webApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest?: WebApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsInventoryRepairHistoryReportInventoryRepairHistoryReportRequest
    })));
}
export function postApiV1SalesinventoryrepairhistoryreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryrepairhistoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryrepairhistoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryrepairhistoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventoryrepairhistoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesinventoryrepairhistoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesinventoryrepairhistoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventoryrepairhistoryreport/preview", {
        ...opts
    }));
}
export function postApiV1SalesinventorytransactionreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesinventorytransactionreportExportexcelxlsx(webApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest?: WebApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest
    })));
}
export function postApiV1SalesinventorytransactionreportRunreport(webApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest?: WebApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedInventoryTransactionReportInventoryTransactionReportRequest
    })));
}
export function postApiV1SalesinventorytransactionreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorytransactionreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorytransactionreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorytransactionreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesinventorytransactionreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesinventorytransactionreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesinventorytransactionreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesinventorytransactionreport/preview", {
        ...opts
    }));
}
export function postApiV1SalesquotebillingreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesquotebillingreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesquotebillingreportExportexcelxlsx(webApiModulesReportsBillingSalesQuoteBillingReportSalesQuoteBillingReportRequest?: WebApiModulesReportsBillingSalesQuoteBillingReportSalesQuoteBillingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesquotebillingreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingSalesQuoteBillingReportSalesQuoteBillingReportRequest
    })));
}
export function postApiV1SalesquotebillingreportRunreport(webApiModulesReportsBillingSalesQuoteBillingReportSalesQuoteBillingReportRequest?: WebApiModulesReportsBillingSalesQuoteBillingReportSalesQuoteBillingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesquotebillingreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingSalesQuoteBillingReportSalesQuoteBillingReportRequest
    })));
}
export function postApiV1SalesquotebillingreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesquotebillingreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesquotebillingreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesquotebillingreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesquotebillingreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesquotebillingreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesquotebillingreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesquotebillingreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesquotebillingreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesquotebillingreport/preview", {
        ...opts
    }));
}
export function postApiV1SalesrepresentativebillingreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalesrepresentativebillingreportExportexcelxlsx(webApiModulesReportsBillingSalesRepresentativeBillingReportSalesRepresentativeBillingReportRequest?: WebApiModulesReportsBillingSalesRepresentativeBillingReportSalesRepresentativeBillingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingSalesRepresentativeBillingReportSalesRepresentativeBillingReportRequest
    })));
}
export function postApiV1SalesrepresentativebillingreportRunreport(webApiModulesReportsBillingSalesRepresentativeBillingReportSalesRepresentativeBillingReportRequest?: WebApiModulesReportsBillingSalesRepresentativeBillingReportSalesRepresentativeBillingReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingSalesRepresentativeBillingReportSalesRepresentativeBillingReportRequest
    })));
}
export function postApiV1SalesrepresentativebillingreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesrepresentativebillingreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesrepresentativebillingreportValidatesalesrepresentativeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/validatesalesrepresentative/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesrepresentativebillingreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalesrepresentativebillingreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalesrepresentativebillingreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalesrepresentativebillingreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salesrepresentativebillingreport/preview", {
        ...opts
    }));
}
export function postApiV1SalestaxcanadareportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxcanadareport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalestaxcanadareportExportexcelxlsx(webApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest?: WebApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxcanadareport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest
    })));
}
export function postApiV1SalestaxcanadareportRunreport(webApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest?: WebApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxcanadareport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest
    })));
}
export function postApiV1SalestaxcanadareportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxcanadareport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalestaxcanadareportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxcanadareport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalestaxcanadareportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxcanadareport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalestaxcanadareportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxcanadareport/preview", {
        ...opts
    }));
}
export function postApiV1SalestaxusareportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxusareport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SalestaxusareportExportexcelxlsx(webApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest?: WebApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxusareport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest
    })));
}
export function postApiV1SalestaxusareportRunreport(webApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest?: WebApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxusareport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsSharedSalesTaxReportSalesTaxReportRequest
    })));
}
export function postApiV1SalestaxusareportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxusareport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SalestaxusareportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxusareport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SalestaxusareportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxusareport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SalestaxusareportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/salestaxusareport/preview", {
        ...opts
    }));
}
export function postApiV1SetbrochurereportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/setbrochurereport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SetbrochurereportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsSetBrochureSetBrochureReportRequest?: WebApiModulesReportsRentalInventoryReportsSetBrochureSetBrochureReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/setbrochurereport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsSetBrochureSetBrochureReportRequest
    })));
}
export function postApiV1SetbrochurereportRunreport(webApiModulesReportsRentalInventoryReportsSetBrochureSetBrochureReportRequest?: WebApiModulesReportsRentalInventoryReportsSetBrochureSetBrochureReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/setbrochurereport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsSetBrochureSetBrochureReportRequest
    })));
}
export function getApiV1SetbrochurereportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/setbrochurereport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SetbrochurereportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/setbrochurereport/preview", {
        ...opts
    }));
}
export function postApiV1ShippingcasepackinglistreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/shippingcasepackinglistreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ShippingcasepackinglistreportExportexcelxlsx(webApiModulesReportsOrderReportsShippingCasePackingListReportShippingCasePackingListReportRequest?: WebApiModulesReportsOrderReportsShippingCasePackingListReportShippingCasePackingListReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/shippingcasepackinglistreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsShippingCasePackingListReportShippingCasePackingListReportRequest
    })));
}
export function postApiV1ShippingcasepackinglistreportRunreport(webApiModulesReportsOrderReportsShippingCasePackingListReportShippingCasePackingListReportRequest?: WebApiModulesReportsOrderReportsShippingCasePackingListReportShippingCasePackingListReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/shippingcasepackinglistreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsShippingCasePackingListReportShippingCasePackingListReportRequest
    })));
}
export function postApiV1ShippingcasepackinglistreportValidateshippingcaseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/shippingcasepackinglistreport/validateshippingcase/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ShippingcasepackinglistreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/shippingcasepackinglistreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ShippingcasepackinglistreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/shippingcasepackinglistreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ShippingcasepackinglistreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/shippingcasepackinglistreport/preview", {
        ...opts
    }));
}
export function postApiV1StoragecontainerlabelRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/storagecontainerlabel/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1StoragecontainerlabelExportexcelxlsx(webApiModulesReportsWarehouseReportsStorageContainerLabelStorageContainerLabelRequest?: WebApiModulesReportsWarehouseReportsStorageContainerLabelStorageContainerLabelRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/storagecontainerlabel/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsStorageContainerLabelStorageContainerLabelRequest
    })));
}
export function postApiV1StoragecontainerlabelRunreport(webApiModulesReportsWarehouseReportsStorageContainerLabelStorageContainerLabelRequest?: WebApiModulesReportsWarehouseReportsStorageContainerLabelStorageContainerLabelRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/storagecontainerlabel/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsStorageContainerLabelStorageContainerLabelRequest
    })));
}
export function getApiV1StoragecontainerlabelEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/storagecontainerlabel/emptyobject", {
        ...opts
    }));
}
export function getApiV1StoragecontainerlabelPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/storagecontainerlabel/preview", {
        ...opts
    }));
}
export function postApiV1SubitemstatusreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SubitemstatusreportExportexcelxlsx(webApiModulesReportsVendorReportsSubItemStatusReportSubItemStatusReportRequest?: WebApiModulesReportsVendorReportsSubItemStatusReportSubItemStatusReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsSubItemStatusReportSubItemStatusReportRequest
    })));
}
export function postApiV1SubitemstatusreportRunreport(webApiModulesReportsVendorReportsSubItemStatusReportSubItemStatusReportRequest?: WebApiModulesReportsVendorReportsSubItemStatusReportSubItemStatusReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsSubItemStatusReportSubItemStatusReportRequest
    })));
}
export function postApiV1SubitemstatusreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubitemstatusreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubitemstatusreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubitemstatusreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubitemstatusreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubitemstatusreportValidatepoclassificationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/validatepoclassification/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SubitemstatusreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SubitemstatusreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subitemstatusreport/preview", {
        ...opts
    }));
}
export function postApiV1SubprofitabilityreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SubprofitabilityreportExportexcelxlsx(webApiModulesReportsVendorReportsSubProfitabilityReportSubProfitabilityReportRequest?: WebApiModulesReportsVendorReportsSubProfitabilityReportSubProfitabilityReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsSubProfitabilityReportSubProfitabilityReportRequest
    })));
}
export function postApiV1SubprofitabilityreportRunreport(webApiModulesReportsVendorReportsSubProfitabilityReportSubProfitabilityReportRequest?: WebApiModulesReportsVendorReportsSubProfitabilityReportSubProfitabilityReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsSubProfitabilityReportSubProfitabilityReportRequest
    })));
}
export function postApiV1SubprofitabilityreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubprofitabilityreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubprofitabilityreportValidatecustomerBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/validatecustomer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubprofitabilityreportValidateorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/validateorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubprofitabilityreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubprofitabilityreportValidatepoclassificationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/validatepoclassification/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SubprofitabilityreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SubprofitabilityreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subprofitabilityreport/preview", {
        ...opts
    }));
}
export function postApiV1SubrentalbillinganalysisreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SubrentalbillinganalysisreportExportexcelxlsx(webApiModulesReportsVendorReportsSubRentalBillingAnalysisReportSubRentalBillingAnalysisReportRequest?: WebApiModulesReportsVendorReportsSubRentalBillingAnalysisReportSubRentalBillingAnalysisReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsSubRentalBillingAnalysisReportSubRentalBillingAnalysisReportRequest
    })));
}
export function postApiV1SubrentalbillinganalysisreportRunreport(webApiModulesReportsVendorReportsSubRentalBillingAnalysisReportSubRentalBillingAnalysisReportRequest?: WebApiModulesReportsVendorReportsSubRentalBillingAnalysisReportSubRentalBillingAnalysisReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsSubRentalBillingAnalysisReportSubRentalBillingAnalysisReportRequest
    })));
}
export function postApiV1SubrentalbillinganalysisreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubrentalbillinganalysisreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubrentalbillinganalysisreportValidatepurchaseorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/validatepurchaseorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubrentalbillinganalysisreportValidatepoclassificationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/validatepoclassification/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubrentalbillinganalysisreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubrentalbillinganalysisreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubrentalbillinganalysisreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SubrentalbillinganalysisreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SubrentalbillinganalysisreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subrentalbillinganalysisreport/preview", {
        ...opts
    }));
}
export function postApiV1SubsalesstageditemsreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1SubsalesstageditemsreportExportexcelxlsx(webApiModulesReportsOrderReportsSubSalesStagedItemsReportSubSalesStagedItemsReportRequest?: WebApiModulesReportsOrderReportsSubSalesStagedItemsReportSubSalesStagedItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsSubSalesStagedItemsReportSubSalesStagedItemsReportRequest
    })));
}
export function postApiV1SubsalesstageditemsreportRunreport(webApiModulesReportsOrderReportsSubSalesStagedItemsReportSubSalesStagedItemsReportRequest?: WebApiModulesReportsOrderReportsSubSalesStagedItemsReportSubSalesStagedItemsReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsOrderReportsSubSalesStagedItemsReportSubSalesStagedItemsReportRequest
    })));
}
export function postApiV1SubsalesstageditemsreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubsalesstageditemsreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubsalesstageditemsreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubsalesstageditemsreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubsalesstageditemsreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1SubsalesstageditemsreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1SubsalesstageditemsreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1SubsalesstageditemsreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/subsalesstageditemsreport/preview", {
        ...opts
    }));
}
export function postApiV1TaskschedulerTaskstepsBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taskscheduler/tasksteps/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TaskschedulerTaskstepsExportexcelxlsx(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taskscheduler/tasksteps/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1TaskschedulerTasksteps({ pageno, pagesize, sort, filter }: {
    pageno?: number;
    pagesize?: number;
    sort?: string;
    filter?: FwStandardModelsFwQueryFilter[];
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardModelsFwQueryResponseWebApiModulesAdministratorTaskSchedulerTaskStepsLogicRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>(`/api/v1/taskscheduler/tasksteps${QS.query(QS.explode({
        pageno,
        pagesize,
        sort,
        filter
    }))}`, {
        ...opts
    }));
}
export function postApiV1TaskschedulerTasksteps(webApiModulesAdministratorTaskSchedulerTaskSteps?: WebApiModulesAdministratorTaskSchedulerTaskSteps, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiModulesAdministratorTaskSchedulerTaskStepsRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taskscheduler/tasksteps", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesAdministratorTaskSchedulerTaskSteps
    })));
}
export function getApiV1TaskschedulerTaskstepsById(id: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiModulesAdministratorTaskSchedulerTaskStepsRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>(`/api/v1/taskscheduler/tasksteps/${encodeURIComponent(id)}`, {
        ...opts
    }));
}
export function putApiV1TaskschedulerTaskstepsById(id: string, webApiModulesAdministratorTaskSchedulerTaskSteps?: WebApiModulesAdministratorTaskSchedulerTaskSteps, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiModulesAdministratorTaskSchedulerTaskStepsRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>(`/api/v1/taskscheduler/tasksteps/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body: webApiModulesAdministratorTaskSchedulerTaskSteps
    })));
}
export function deleteApiV1TaskschedulerTaskstepsById(id: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: boolean;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>(`/api/v1/taskscheduler/tasksteps/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE"
    }));
}
export function postApiV1TaxespaidreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taxespaidreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1TaxespaidreportExportexcelxlsx(webApiModulesReportsBillingTaxesPaidReportTaxesPaidReportRequest?: WebApiModulesReportsBillingTaxesPaidReportTaxesPaidReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taxespaidreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingTaxesPaidReportTaxesPaidReportRequest
    })));
}
export function postApiV1TaxespaidreportRunreport(webApiModulesReportsBillingTaxesPaidReportTaxesPaidReportRequest?: WebApiModulesReportsBillingTaxesPaidReportTaxesPaidReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taxespaidreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsBillingTaxesPaidReportTaxesPaidReportRequest
    })));
}
export function postApiV1TaxespaidreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taxespaidreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TaxespaidreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taxespaidreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1TaxespaidreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taxespaidreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1TaxespaidreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/taxespaidreport/preview", {
        ...opts
    }));
}
export function postApiV1TransferfixedassetownershipreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferfixedassetownershipreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1TransferfixedassetownershipreportExportexcelxlsx(webApiModulesReportsTransferFixedAssetOwnershipReportTransferFixedAssetOwnershipReportRequest?: WebApiModulesReportsTransferFixedAssetOwnershipReportTransferFixedAssetOwnershipReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferfixedassetownershipreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsTransferFixedAssetOwnershipReportTransferFixedAssetOwnershipReportRequest
    })));
}
export function postApiV1TransferfixedassetownershipreportRunreport(webApiModulesReportsTransferFixedAssetOwnershipReportTransferFixedAssetOwnershipReportRequest?: WebApiModulesReportsTransferFixedAssetOwnershipReportTransferFixedAssetOwnershipReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferfixedassetownershipreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsTransferFixedAssetOwnershipReportTransferFixedAssetOwnershipReportRequest
    })));
}
export function postApiV1TransferfixedassetownershipreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferfixedassetownershipreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferfixedassetownershipreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferfixedassetownershipreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferfixedassetownershipreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferfixedassetownershipreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferfixedassetownershipreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferfixedassetownershipreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1TransferfixedassetownershipreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferfixedassetownershipreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1TransferfixedassetownershipreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferfixedassetownershipreport/preview", {
        ...opts
    }));
}
export function postApiV1TransfermanifestreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transfermanifestreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1TransfermanifestreportRunreport(webApiModulesReportsContractReportsTransferManifestReportTransferManifestReportRequest?: WebApiModulesReportsContractReportsTransferManifestReportTransferManifestReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transfermanifestreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsTransferManifestReportTransferManifestReportRequest
    })));
}
export function postApiV1TransfermanifestreportValidatemanifestBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transfermanifestreport/validatemanifest/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1TransfermanifestreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transfermanifestreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1TransfermanifestreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transfermanifestreport/preview", {
        ...opts
    }));
}
export function postApiV1TransferorderreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferorderreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1TransferorderreportRunreport(webApiModulesReportsTransferReportsTransferOrderReportTransferOrderReportRequest?: WebApiModulesReportsTransferReportsTransferOrderReportTransferOrderReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferorderreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsTransferReportsTransferOrderReportTransferOrderReportRequest
    })));
}
export function postApiV1TransferorderreportValidatetransferorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferorderreport/validatetransferorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1TransferorderreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferorderreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1TransferorderreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferorderreport/preview", {
        ...opts
    }));
}
export function postApiV1TransferreceiptreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreceiptreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1TransferreceiptreportRunreport(webApiModulesReportsContractReportsTransferReceiptReportTransferReceiptReportRequest?: WebApiModulesReportsContractReportsTransferReceiptReportTransferReceiptReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreceiptreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsContractReportsTransferReceiptReportTransferReceiptReportRequest
    })));
}
export function postApiV1TransferreceiptreportValidatereceiptBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreceiptreport/validatereceipt/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1TransferreceiptreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreceiptreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1TransferreceiptreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreceiptreport/preview", {
        ...opts
    }));
}
export function postApiV1TransferreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1TransferreportExportexcelxlsx(webApiModulesReportsMultiLocationReportsTransferReportTransferReportRequest?: WebApiModulesReportsMultiLocationReportsTransferReportTransferReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsMultiLocationReportsTransferReportTransferReportRequest
    })));
}
export function postApiV1TransferreportRunreport(webApiModulesReportsMultiLocationReportsTransferReportTransferReportRequest?: WebApiModulesReportsMultiLocationReportsTransferReportTransferReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsMultiLocationReportsTransferReportTransferReportRequest
    })));
}
export function postApiV1TransferreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferreportValidatetransferBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/validatetransfer/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferreportValidatetowarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/validatetowarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferreportValidatefromwarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/validatefromwarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1TransferreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1TransferreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1TransferreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/transferreport/preview", {
        ...opts
    }));
}
export function postApiV1UnretiredrentalinventoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1UnretiredrentalinventoryreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsUnretiredRentalInventoryReportUnretiredRentalInventoryReportRequest?: WebApiModulesReportsRentalInventoryReportsUnretiredRentalInventoryReportUnretiredRentalInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsUnretiredRentalInventoryReportUnretiredRentalInventoryReportRequest
    })));
}
export function postApiV1UnretiredrentalinventoryreportRunreport(webApiModulesReportsRentalInventoryReportsUnretiredRentalInventoryReportUnretiredRentalInventoryReportRequest?: WebApiModulesReportsRentalInventoryReportsUnretiredRentalInventoryReportUnretiredRentalInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsUnretiredRentalInventoryReportUnretiredRentalInventoryReportRequest
    })));
}
export function postApiV1UnretiredrentalinventoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1UnretiredrentalinventoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1UnretiredrentalinventoryreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1UnretiredrentalinventoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1UnretiredrentalinventoryreportValidateunretiredreasonBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/validateunretiredreason/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1UnretiredrentalinventoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1UnretiredrentalinventoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1UnretiredrentalinventoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/unretiredrentalinventoryreport/preview", {
        ...opts
    }));
}
export function postApiV1ValueofoutrentalinventoryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1ValueofoutrentalinventoryreportExportexcelxlsx(webApiModulesReportsRentalInventoryReportsValueOfOutRentalInventoryReportValueOfOutRentalInventoryReportRequest?: WebApiModulesReportsRentalInventoryReportsValueOfOutRentalInventoryReportValueOfOutRentalInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsValueOfOutRentalInventoryReportValueOfOutRentalInventoryReportRequest
    })));
}
export function postApiV1ValueofoutrentalinventoryreportRunreport(webApiModulesReportsRentalInventoryReportsValueOfOutRentalInventoryReportValueOfOutRentalInventoryReportRequest?: WebApiModulesReportsRentalInventoryReportsValueOfOutRentalInventoryReportValueOfOutRentalInventoryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsRentalInventoryReportsValueOfOutRentalInventoryReportValueOfOutRentalInventoryReportRequest
    })));
}
export function postApiV1ValueofoutrentalinventoryreportValidateinventorytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/validateinventorytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ValueofoutrentalinventoryreportValidatecategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/validatecategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ValueofoutrentalinventoryreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ValueofoutrentalinventoryreportValidatesubcategoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/validatesubcategory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ValueofoutrentalinventoryreportValidateinventoryBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/validateinventory/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1ValueofoutrentalinventoryreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1ValueofoutrentalinventoryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1ValueofoutrentalinventoryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/valueofoutrentalinventoryreport/preview", {
        ...opts
    }));
}
export function postApiV1VendorinvoicebatchreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicebatchreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1VendorinvoicebatchreportExportexcelxlsx(webApiModulesReportsChargeProcessingReportsVendorInvoiceBatchReportVendorInvoiceBatchReportRequest?: WebApiModulesReportsChargeProcessingReportsVendorInvoiceBatchReportVendorInvoiceBatchReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicebatchreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsChargeProcessingReportsVendorInvoiceBatchReportVendorInvoiceBatchReportRequest
    })));
}
export function postApiV1VendorinvoicebatchreportRunreport(webApiModulesReportsChargeProcessingReportsVendorInvoiceBatchReportVendorInvoiceBatchReportRequest?: WebApiModulesReportsChargeProcessingReportsVendorInvoiceBatchReportVendorInvoiceBatchReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicebatchreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsChargeProcessingReportsVendorInvoiceBatchReportVendorInvoiceBatchReportRequest
    })));
}
export function postApiV1VendorinvoicebatchreportValidatebatchBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicebatchreport/validatebatch/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1VendorinvoicebatchreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicebatchreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1VendorinvoicebatchreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicebatchreport/preview", {
        ...opts
    }));
}
export function postApiV1VendorinvoicesummaryreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1VendorinvoicesummaryreportExportexcelxlsx(webApiModulesReportsVendorReportsVendorInvoiceSummaryReportVendorInvoiceSummaryReportRequest?: WebApiModulesReportsVendorReportsVendorInvoiceSummaryReportVendorInvoiceSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsVendorInvoiceSummaryReportVendorInvoiceSummaryReportRequest
    })));
}
export function postApiV1VendorinvoicesummaryreportRunreport(webApiModulesReportsVendorReportsVendorInvoiceSummaryReportVendorInvoiceSummaryReportRequest?: WebApiModulesReportsVendorReportsVendorInvoiceSummaryReportVendorInvoiceSummaryReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsVendorReportsVendorInvoiceSummaryReportVendorInvoiceSummaryReportRequest
    })));
}
export function postApiV1VendorinvoicesummaryreportValidatepurchaseorderBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/validatepurchaseorder/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1VendorinvoicesummaryreportValidateofficelocationBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/validateofficelocation/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1VendorinvoicesummaryreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1VendorinvoicesummaryreportValidatedealBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/validatedeal/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1VendorinvoicesummaryreportValidatevendorBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/validatevendor/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1VendorinvoicesummaryreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1VendorinvoicesummaryreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/vendorinvoicesummaryreport/preview", {
        ...opts
    }));
}
export function postApiV1WarehousedispatchreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehousedispatchreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1WarehousedispatchreportExportexcelxlsx(webApiModulesReportsWarehouseReportsWarehouseDispatchReportWarehouseDispatchReportRequest?: WebApiModulesReportsWarehouseReportsWarehouseDispatchReportWarehouseDispatchReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehousedispatchreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsWarehouseDispatchReportWarehouseDispatchReportRequest
    })));
}
export function postApiV1WarehousedispatchreportRunreport(webApiModulesReportsWarehouseReportsWarehouseDispatchReportWarehouseDispatchReportRequest?: WebApiModulesReportsWarehouseReportsWarehouseDispatchReportWarehouseDispatchReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehousedispatchreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsWarehouseDispatchReportWarehouseDispatchReportRequest
    })));
}
export function postApiV1WarehousedispatchreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehousedispatchreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1WarehousedispatchreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehousedispatchreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1WarehousedispatchreportValidateactivitytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehousedispatchreport/validateactivitytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1WarehousedispatchreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehousedispatchreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1WarehousedispatchreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehousedispatchreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1WarehousedispatchreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehousedispatchreport/preview", {
        ...opts
    }));
}
export function postApiV1WarehouseinboundreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseinboundreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1WarehouseinboundreportExportexcelxlsx(webApiModulesReportsWarehouseReportsWarehouseInboundReportWarehouseInboundReportRequest?: WebApiModulesReportsWarehouseReportsWarehouseInboundReportWarehouseInboundReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseinboundreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsWarehouseInboundReportWarehouseInboundReportRequest
    })));
}
export function postApiV1WarehouseinboundreportRunreport(webApiModulesReportsWarehouseReportsWarehouseInboundReportWarehouseInboundReportRequest?: WebApiModulesReportsWarehouseReportsWarehouseInboundReportWarehouseInboundReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseinboundreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsWarehouseInboundReportWarehouseInboundReportRequest
    })));
}
export function postApiV1WarehouseinboundreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseinboundreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1WarehouseinboundreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseinboundreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1WarehouseinboundreportValidateactivitytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseinboundreport/validateactivitytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1WarehouseinboundreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseinboundreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1WarehouseinboundreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseinboundreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1WarehouseinboundreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseinboundreport/preview", {
        ...opts
    }));
}
export function postApiV1WarehouseoutboundreportRender(fwStandardReportingFwReportRenderRequest?: FwStandardReportingFwReportRenderRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardReportingFwReportRenderResponse;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseoutboundreport/render", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardReportingFwReportRenderRequest
    })));
}
export function postApiV1WarehouseoutboundreportExportexcelxlsx(webApiModulesReportsWarehouseReportsWarehouseOutboundReportWarehouseOutboundReportRequest?: WebApiModulesReportsWarehouseReportsWarehouseOutboundReportWarehouseOutboundReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseoutboundreport/exportexcelxlsx", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsWarehouseOutboundReportWarehouseOutboundReportRequest
    })));
}
export function postApiV1WarehouseoutboundreportRunreport(webApiModulesReportsWarehouseReportsWarehouseOutboundReportWarehouseOutboundReportRequest?: WebApiModulesReportsWarehouseReportsWarehouseOutboundReportWarehouseOutboundReportRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: WebApiDataAppReportResponseRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseoutboundreport/runreport", oazapfts.json({
        ...opts,
        method: "POST",
        body: webApiModulesReportsWarehouseReportsWarehouseOutboundReportWarehouseOutboundReportRequest
    })));
}
export function postApiV1WarehouseoutboundreportValidatewarehouseBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseoutboundreport/validatewarehouse/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1WarehouseoutboundreportValidatedepartmentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseoutboundreport/validatedepartment/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1WarehouseoutboundreportValidateactivitytypeBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseoutboundreport/validateactivitytype/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function postApiV1WarehouseoutboundreportValidateagentBrowse(fwStandardModelsBrowseRequest?: FwStandardModelsBrowseRequest, opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseoutboundreport/validateagent/browse", oazapfts.json({
        ...opts,
        method: "POST",
        body: fwStandardModelsBrowseRequest
    })));
}
export function getApiV1WarehouseoutboundreportEmptyobject(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseoutboundreport/emptyobject", {
        ...opts
    }));
}
export function getApiV1WarehouseoutboundreportPreview(opts?: Oazapfts.RequestOpts) {
    return oazapfts.ok(oazapfts.fetchJson<{
        status: 200;
        data: FwStandardSqlServerFwJsonDataTableRead;
    } | {
        status: 400;
        data: FwCoreApiSwashbuckleBadRequestResponse;
    } | {
        status: 401;
    } | {
        status: 403;
    } | {
        status: 500;
        data: FwStandardModelsFwApiException;
    }>("/api/v1/warehouseoutboundreport/preview", {
        ...opts
    }));
}
export enum FwStandardSqlServerFwDataTypes {
    Text = "Text",
    NonTrimmableText = "NonTrimmableText",
    Date = "Date",
    Time = "Time",
    DateTime = "DateTime",
    DateTimeOffset = "DateTimeOffset",
    CreditCardExpirationDate = "CreditCardExpirationDate",
    Decimal = "Decimal",
    DecimalStringNoTrailingZeros = "DecimalStringNoTrailingZeros",
    DecimalString1Digit = "DecimalString1Digit",
    DecimalString2Digits = "DecimalString2Digits",
    DecimalString3Digits = "DecimalString3Digits",
    DecimalString4Digits = "DecimalString4Digits",
    DecimalString8Digits = "DecimalString8Digits",
    Boolean = "Boolean",
    CurrencyString = "CurrencyString",
    CurrencyStringNoDollarSign = "CurrencyStringNoDollarSign",
    CurrencyStringNoDollarSignNoDecimalPlaces = "CurrencyStringNoDollarSignNoDecimalPlaces",
    PhoneUs = "PhoneUS",
    ZipcodeUs = "ZipcodeUS",
    PercentageWholeNumber = "PercentageWholeNumber",
    Percentage2Digits = "Percentage2Digits",
    Percentage4Digits = "Percentage4Digits",
    OleToHtmlColor = "OleToHtmlColor",
    Integer = "Integer",
    JpgDataUrl = "JpgDataUrl",
    UtcDateTime = "UTCDateTime"
}
export enum FwStandardSqlServerAttributesFwExcelOptions {
    Required = "Required",
    Recommended = "Recommended",
    Optional = "Optional",
    Omit = "Omit",
    None = "None"
}
export enum WebApiModulesReportsOrderReportsOrderReportReportViewType {
    Summary = "Summary",
    Detail = "Detail",
    Header = "Header"
}
export enum WebApiIncludeExcludeAll {
    All = "All",
    IncludeOnly = "IncludeOnly",
    Exclude = "Exclude"
}
